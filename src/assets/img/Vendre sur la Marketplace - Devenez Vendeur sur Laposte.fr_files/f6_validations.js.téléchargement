if (!F6)
	var F6 = {};
else if (F6 && typeof (F6) != "object")
	throw new Error("F6 is not an Object type");

/**
 * AJOUTER UNE DIV POUR LES ERREURS <div id="errorBoxTop" class="errorDisplay"></div>
 * 
 */

F6.VALIDATIONS = {}; 
F6.VALIDATIONS.METHODS = {};
F6.VALIDATIONS.MESSAGES = {};

var erreurCodeLocal = false;

var erreurNomPrenomCiv = false;

var validFD = true;
/*
 * Custom validation methods
 */
F6.VALIDATIONS.METHODS = {
	//Nouaoui Zakaria :  Le nombre est tronqué après les 2 chiffres suivant la virgule
	'priceValidation2' : function(value, element) {
		
		if (value == "") {
			return true;
		}
		var result = /^[0-9]+([,.][0-9]{1,10}){0,1}$/.test(value);
		if(result)
		{
//			var val = value.replace(',','.');
//			var index = val.indexOf(".");
//			alert('val : '+val);
//			
//			var val2 = val.substring(index+2);
//			alert('val2 : '+val2);
//			element.value = val2;
		}
		return result;
	},	
		
	// priceValidation: true
	'priceValidation' : function(value, element) {
		if (value == "") {
			return true;
		}
		return /^[0-9]+([,.][0-9]{1,2}){0,1}$/.test(value);
	},
	// priceValidationRechargeCPP: true : nombre de décimales après la virgule
	'priceValidationRechargeCPP' : function(value, element) {
		if (value == "") {
			return true;
		}
		return /^[0-9]+([,.][0-9]{1,2}){0,1}$/.test(value);
	},
	// priceValidationCPP: true : juste (, .) sont accepté 
	'priceValidationCPP' : function(value, element) {
		if (value == "") {
			return true;
		}
		return /^[0-9]+([,.][0-9]{1,}){0,1}$/.test(value);
	},
	// oneAtLeastRequired: ['fieldname1', 'fieldname2', 'fieldname3',
	// 'fieldname4']
	'oneAtLeastRequired' : function(value, element, params) {
		var formel = $(element).closest('form');
		for (key in params) {
			if (formel.find('[name=' + params[key] + ']').val() != "")
				return true
		}
		return false;
	},
	// dateCompare: {'date': 'fieldname|date', 'type': 'greater|earlier'}
	'dateCompare' : function(value, element, params) {
		if (value == "") {
			return true;
		}
		var tabDate = params['date'].split("/");
		if (tabDate.length != 3) {
			var datetime = new Date(tabDate[2], tabDate[1]-1, tabDate[0])
					.getTime();
			if (isNaN(datetime)) {
				var formel = $(element).closest('form');
				var date = formel.find('[name=' + params['date'] + ']').val();
				if (date == "") {
					return true;
				}
				var tabDate = date.split("/");
				datetime = new Date(tabDate[2], tabDate[1]-1, tabDate[0])
						.getTime();
			}
		}
		if (isNaN(datetime)) {
			return false;
		}
		var tabValue = value.split("/");
		var valuetime = new Date(tabValue[2], tabValue[1]-1, tabValue[0])
				.getTime();

		if (params['type'] == "earlier") {
			return valuetime <= datetime;
		} else {
			return valuetime >= datetime;
		}

	},
	// greaterThan: 'fieldName'
	'greaterThan' : function(value, element, param) {
		if (value == "") {
			return true;
		}
		var value2 = $(element).closest('form').find('[name=' + param + ']'); 
		if (value2 == "") {
			return true;
		}
		
		return (parseFloat(value.replace(",", ".")) >= parseFloat(value2.replace(",", ".")));
	},
	
	'greaterThanMin' : function(value, element) {
		if (value == "") {
			return true;
		}
		var value2 = $('#montantmin').val();
		
		if (value2 == "") {
			return true;
		}
		
		return (parseFloat(value.replace(",", ".")) >= parseFloat(value2.replace(",", ".")));
	},
	
	// lessThan: 'fieldName'
	'lessThan' : function(value, element, param) {
		if (value == "") {
			return true;
		}
		var value2 = $(element).closest('form').find('[name=' + param + ']')
				.val();
		if (value2 == "") {
			return true;
		}
		return (parseFloat(value.replace(",", ".")) <= parseFloat(value2.replace(",", ".")));
	},
	
	'lessThanMax' : function(value, element, param) {
		if (value == "") {
			return true;
		}
		var value2 = $('#montantmax').val();
		
		if (value2 == "") {
			return true;
		}
		
		return (parseFloat(value.replace(",", ".")) <= parseFloat(value2.replace(",", ".")));
	},
	
	'datefr' : function(value, element) {
		if (value == "") {
			return true;
		}
		return /^[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{4}$/.test(value);
	}
};

/*
 * Default messages for custom validation methods
 */
F6.VALIDATIONS.MESSAGES = {
	'priceValidation' : Globalize.localize("Merci de saisir un prix valide",
			"fr_FR"),
	'oneAtLeastRequired' : Globalize.localize(
			"Merci de remplir au moins un champ", "fr_FR")
}

// Redefine default options
F6.VALIDATIONS.initDefault = function() {
   var formSubmitted=true;
	var defaultContainer = $('#errorBoxTop').length ? $('#errorBoxTop') : $([]);
	if ($('#errorBoxTop').length)
		$('#errorBoxTop').html('<ul></ul>');
	F6.UTILS.tagCommanderAdpter($, tc_vars);
	if (defaultContainer.length > 0) {
		$.validator
		.setDefaults({
			errorContainer : defaultContainer,
			wrapper : 'li',
			focusInvalid : false,
			onkeyup : false,
			onfocusout : false,
			errorPlacement : function(error, element) {
				var container = $.data($(element).closest('form')[0],
						'validator').containers;
				element.parent().after(error);
				if (element.attr('type') != 'checkbox' && element.attr('type') != 'hidden'
						&& element.attr('type') != 'radio') {
					element.parent().parent().addClass('error-contener');
				}
				$(container).find("ul").append(error);
			},
			highlight : function(element) {
				if(element.name != 'addressId' && element.name != 'codeLocalite') {
					$(element).parent().parent().addClass("error-contener");formSubmitted=false;
				}
				
				if(erreurCodeLocal){						
					$('input[id=codePostal]').parent().parent().addClass("error-contener");formSubmitted=false;
					$('input[id=localite]').parent().parent().addClass("error-contener");formSubmitted=false;
				}
				
				if(erreurNomPrenomCiv){						
					$('input[id=lastName]').parent().parent().addClass("error-contener");formSubmitted=false;
					$('input[id=firstName]').parent().parent().addClass("error-contener");formSubmitted=false;
				}
			},
			unhighlight : function(element) {
				$(element).parent().parent().removeClass("error-contener");
				formSubmitted = true;
				if(erreurCodeLocal && (element.name == "codePostal" || element.name == "localite")){
					$('input[id=codePostal]').parent().parent().addClass("error-contener");
					$('input[id=localite]').parent().parent().addClass("error-contener");
				}
				
				if(erreurNomPrenomCiv && (element.name == "lastName" || element.name == "firstName")){
					$('input[id=lastName]').parent().parent().addClass("error-contener");
					$('input[id=firstName]').parent().parent().addClass("error-contener");
				}
			},
			invalidHandler : function(error, element) {
				F6.VALIDATIONS.highlightError($(element['containers'])
						.attr('id'));formSubmitted=false;
			},
			submitHandler : function(form) {
				if(formSubmitted){						
					formSubmitted=true;
					form.submit();
				}
			}
		});

	

		$.validator.messages = {
			required : function(value, element) {
				if(document.getElementById("codePostalAdressePersonnelles")){
				    return Globalize.localize("editAddress.codePostal", "fr_FR" )
				}
				else{
				    return $(element).attr('name') + " : "
						+ Globalize.localize("This field is required.", "fr_FR")
				}
			},
			remote : "Please fix this field.",
			email : Globalize.localize("Please enter a valid email address.",
					"fr_FR"),
			url : "Please enter a valid URL.",
			date : "Please enter a valid date.",
			dateISO : "Please enter a valid date (ISO).",
			number : "Please enter a valid number.",
			digits : Globalize.localize("Please enter only digits.", "fr_FR"),
			creditcard : "Please enter a valid credit card number.",
			equalTo : "Please enter the same value again.",
			accept : "Please enter a value with a valid extension.",
			maxlength : jQuery.validator.format(Globalize.localize(
					"Please enter no more than {0} characters.", "fr_FR")),
			minlength : jQuery.validator.format(Globalize.localize(
					"Please enter at least {0} characters.", "fr_FR")),
			rangelength : jQuery.validator.format("Please enter a value between {0} and {1} characters long."),
			range : jQuery.validator.format("Please enter a value between {0} and {1}."),
			max : jQuery.validator.format("Please enter a value less than or equal to {0}."),
			min : jQuery.validator.format("Please enter a value greater than or equal to {0}.")
		};
    }
	//controle communication par sms Pro
	if(document.getElementById("register.acceptSMS") != null) {
		document.getElementById("register.acceptSMS").disabled = true;
		if($('#telephone') != null){
				//souscription client
				$('#telephone').keyup(function(e) { 
					controlerCommunicationSMSSouscriptionPro();
					});
				$('#telephone').on("mouseup", function(e) {
					controlerCommunicationSMSSouscriptionPro();
					});
				$('#telephone').bind ("input propertychange", function (e) {
					controlerCommunicationSMSSouscriptionPro();
				});
				function controlerCommunicationSMSSouscriptionPro(){
					var val = $('#telephone').val();
					if(val != null) {
						document.getElementById("register.acceptSMS").disabled = false;
						}
					if(val == "" || val == null) { 
						document.getElementById("register.acceptSMS").checked = false;
						document.getElementById("register.acceptSMS").disabled = true;
						}
				}
				var valo = $('#telephone').val();
				if(valo != null && valo != "") {
					document.getElementById("register.acceptSMS").disabled = false;
				}
		}
		//Information personnelles du client
		if(document.getElementById("register.phone") != null) {
			document.getElementById("register.phone").onkeyup = function(e) {
				controlerCommunicationSMSInfoPersonnellePro();				
};
			document.getElementById("register.phone").onmouseup = function(e) {
				controlerCommunicationSMSInfoPersonnellePro();
				};
			document.getElementById("register.phone").oninput = function(e) {
				controlerCommunicationSMSInfoPersonnellePro();
				};
				//For IE < 9
			document.getElementById("register.phone").onpropertychange = function(e) {
				controlerCommunicationSMSInfoPersonnellePro();
				};			
			function controlerCommunicationSMSInfoPersonnellePro(){
				var val = document.getElementById("register.phone").value;  
				if(val != null) {
					document.getElementById("register.acceptSMS").disabled = false;
					} 
				if(val == "" || val == null) {
					document.getElementById("register.acceptSMS").checked = false;
					document.getElementById("register.acceptSMS").disabled = true;
					}
			}
			controlerCommunicationSMSInfoPersonnellePro();
		}
	 }	
};

F6.VALIDATIONS.highlightError = function() {
	window.setTimeout(function() {
		document.location.href = "#errorBoxTop";
	}, 200);

};
//modifier les règles d'affichage de la phrase en lien avec la saisie du n° de tel portable
function regleAffichegeContract6M(val){
	if(document.getElementById("alert_sms") != null) {
		if(val == 6){
			document.getElementById("alert_sms").style.display='block'; 
		}
		if( val != 6){
			document.getElementById("alert_sms").style.display='none';
		}	
	}
}
//function regleAffichegeContract6MPMNA(val){
//	if(document.getElementById("sixmoins") != null && document.getElementById("douzemoins") != null) {
//		if(document.getElementById("sixmoins").selected == true) {
//			//
//		}
//		}
//		if(document.getElementById("douzemoins").selected == true){
//		alert("douzemois");
//		}	
//	}
//}
// Make custom methods and messages available
for (methodName in F6.VALIDATIONS.METHODS) {
	if (F6.VALIDATIONS.MESSAGES[methodName] == 'undefined') {
		var message = Globalize.localize("default message not found", "fr_FR");
	} else {
		var message = F6.VALIDATIONS.MESSAGES[methodName];
	}
	$.validator.addMethod(methodName, F6.VALIDATIONS.METHODS[methodName],
			message);
}

/*
 * F6.VALIDATIONS All validation functions goes here
 */

F6.VALIDATIONS.SuiviEnvoisTempsReel = function() {
	var f = $('#courrierData');
	var container = $('#trackError');
	// container.html('<ul></ul>');
	f.validate({
		errorContainer : container,
		wrapper : 'span',
		rules : {
			suivi_envois_temps_reel : {
				minlength : 13
			}
		},
		messages : {
			suivi_envois_temps_reel : {
				required : Globalize.localize("Ce champ est obligatoire.",
						"fr_FR"),
				minlength : Globalize.localize("Entrez 13 caractères minimum",
						"fr_FR"),
				maxlength : Globalize.localize("Entrez 13 caractères maximum",
						"fr_FR")
			}
		},
		errorPlacement : function(error, element) {
			element.parent().after(error);
			$(container).html(error);
		},
		submitHandler : function(form) {
			F6.AJAX.SuiviEnvoisTempsReel(form);
		},
		invalidHandler : function(error, element) {
			$(element).unbind('submit');
			F6.VALIDATIONS.highlightError($(element['containers']).attr('id'));
		}
	});
}

F6.VALIDATIONS.tCompteMotdepasse01 = function() {
	var f = $('#formEtapes');

	var container = $('#errorBoxTop');

	$('#errorBoxTop').html('<ul></ul>');

	f.validate({
		rules : {
			email : 'required email'
		},

        onsubmit: true,
        onfocusout: false,
        onkeyup: false,
        onclick: false,
        messages: {
            email: {
                required: Globalize.localize("Ce champ est obligatoire.", "fr_FR" ),
                email: Globalize.localize("Le format de l'e-mail est erroné", "fr_FR" )
            }
        },
        errorContainer: container,
        wrapper: 'li',

		errorPlacement : function(error, element) {
			element.parent().after(error);
			$("ul", container).append(error);
		},
		invalidHandler : function() {
//			F6.VALIDATIONS.highlightError();
		}
	});

	/*
	 * $('#submitEmail').click(function(e){ f.submit(); e.preventDefault(); });
	 */
};

F6.VALIDATIONS.csuiviAccueil = function() {
	var f = $('#referenceNumber');

	var container = $('#errorBoxTop');

	$('#errorBoxTop').html('<ul></ul>');

	f.validate({
		onkeyup : false,
		onfocusout : false,
		rules : {
			reference : 'required'
		},
		messages : {
			reference : {
				required : Globalize.localize("Ce champ est obligatoire.",
						"fr_FR")
			}
		},

		errorContainer : container,
		wrapper : 'li',

		errorPlacement : function(error, element) {
			element.parent().after(error);

			$("ul", container).append(error);

		},
		invalidHandler : function() {
			F6.VALIDATIONS.highlightError();
		}
	});

};

// Validator for t_Csuivi_tranche_resultat2.php
F6.VALIDATIONS.formFieldNumber = function() {
	var fTranche = $('#formSearch');

	var container = $('#errorBoxTop');

	$('#errorBoxTop').html('<ul></ul>');

	fTranche.validate({
		onkeyup : false,
		onfocusout : false,
		rules : {
			formNom : 'required',
			formNombrepris : {
				'required' : {
					depends : function(element) {
						return $("#dernierNum1").val() == '';
					}
				}
			},
			formDernier : {
				'required' : {
					depends : function(element) {
						return $("#nombrePris").val() == '';
					}
				}
			}
		},
		messages : {
			formNom : Globalize.localize("Premier numéro est nécessaire",
					"fr_FR"),
			formNombrepris : Globalize.localize(
					"Nombre de pris est nécessaire", "fr_FR"),
			formDernier : Globalize.localize("Dernier numéro est nécessaire",
					"fr_FR")
		},

		errorContainer : container,
		wrapper : 'li',

		errorPlacement : function(error, element) {
			element.parent().after(error);
			$("ul", container).append(error);
		},
		highlight : function(element, errorClass, validClass) {
			if ($(element).attr('class') == 'optgroup') {
				$('.optgroup').parent().find('label.error').show();
			}
		},
		unhighlight : function(element, errorClass, validClass) {
			if ($(element).attr('class') == 'optgroup') {
				$('.optgroup').parent().find('label.error').hide();
			}
		},
		invalidHandler : function() {
			F6.VALIDATIONS.highlightError();
		}
	});
};

// Validator for t_Csuivi_tranche_resultats_v2.php
F6.VALIDATIONS.formNumRecherche = function() {
	var fCourrier = $('.parnumero');

	fCourrier.validate({
		onkeyup : false,
		onfocusout : false,
		submitHandler : function(form) {
			// form.submit();
			$('.hide_table_result').show();
		},
		rules : {
			formNom : 'required'
		},
		messages : {
			formNom : Globalize.localize("Mandatory field", "fr_FR")
		},
		highlight : function(element, errorClass, validClass) {
			if ($(element).attr('class') == 'optgroup') {
				$('.optgroup').parent().find('label.error').show();
			}
		},
		unhighlight : function(element, errorClass, validClass) {
			if ($(element).attr('class') == 'optgroup') {
				$('.optgroup').parent().find('label.error').hide();
			}
		}
	});

};

F6.VALIDATIONS.formParnumero = function() {

	var fParnumero = $('#parnumero');

	fParnumero.validate({
		onkeyup : false,
		onfocusout : false,
		submitHandler : function(form) {
			// form.submit();
			$('.hide_table_result').show();
			var elLinkTable = $('td.identifiant_num a.hideData');

			elLinkTable.each(function() {
				var elThisLoop = $(this);
				elThisLoop.parents("tr").next("tr").show();
				elThisLoop.removeClass("hideTr");
				elThisLoop.addClass("show");
				elThisLoop.find("img").attr("src",
						"images/icons/table_collapse.gif");

			});
		},
		rules : {
			numRecherche : 'required'
		},
		messages : {
			numRecherche : Globalize.localize("Mandatory Field", "fr_FR")
		}
	});

};

F6.VALIDATIONS.formContact = function() {

	var sel = $("#formSujet"), elFormContact = $('#formContact');
	sel.selectBox(),

	// Clear the text of selected
	sel.next().children().eq(0).html('');

	var container = $('#errorBoxTop');

	$('#errorBoxTop').html('<ul></ul>')

	elFormContact.validate({
		onkeyup : false,
		onfocusout : false,
		rules : {
			formNom : 'required',
			formPrenom : 'required',
			emailInput : 'required email',
			emailConf : 'required email',
			objet : 'required',
			message : 'required',
			standardDropdown : 'required'
		},

		errorContainer : container,
		wrapper : 'li',

		errorPlacement : function(error, element) {
			element.parent().after(error);
			$("ul", container).append(error);
		},
		highlight : function(element, errorClass) {
			var e = $(element);
			e.addClass(errorClass);
			e.parent().addClass(errorClass);

		},
		unhighlight : function(element, errorClass) {
			var e = $(element);
			e.removeClass(errorClass);
			e.parent().removeClass(errorClass);

		},

		messages : {

			formNom : Globalize.localize("Nom est nécessaire", "fr_FR"),
			formPrenom : Globalize.localize("Prénom est nécessaire", "fr_FR"),
			emailInput : {
				required : Globalize.localize("Email est nécessaire", "fr_FR"),
				email : Globalize.localize("Entrer une adresse email valide.",
						"fr_FR")
			},
			emailConf : {
				required : Globalize.localize(
						"Confirmation email est nécessaire", "fr_FR"),
				email : Globalize.localize("E-mail ne correspond pas", "fr_FR")
			},
			objet : Globalize.localize("Objet est nécessaire", "fr_FR"),
			message : Globalize.localize("Message est nécessaire", "fr_FR"),
			standardDropdown : Globalize.localize("Sujet est nécessaire",
					"fr_FR")

		}
	});
};

//mkaabi 
F6.VALIDATIONS.retourEnLigne = function(){
	 var formElement = $('#retourEnLigne');
	 formElement.validate({
		 onkeyup: false,
	        onfocusout: false,
	        rules: {
	        
	        }
	 })
};

/**
 * Form validation "Modifier mon mot de passe"
 */
F6.VALIDATIONS.formModifyPass = function() {
    var formElement = $('#formModifyPass');

    formElement.validate({
        onkeyup: false,
        onfocusout: false,
        rules: {
            currentPassword: 'required',
            newPassword: {
        		required : true,
                minlength: 8
            },
            checkNewPassword: {
            	required : true,
                equalTo: "#formNewPassword"
            }
        },
        messages: {

        	currentPassword: Globalize.localize("Mot de passe est nécessaire", "fr_FR" ),
        	newPassword: {
                required: Globalize.localize("NewPassRequired", "fr_FR" ),
                minlength: Globalize.localize("8 caractères minimum", "fr_FR" )
            },
            checkNewPassword: {
                required: Globalize.localize("ConfirmNewPassRequired", "fr_FR" ),
                equalTo: Globalize.localize("Not Equal", "fr_FR" )

            }
        },
//        errorPlacement: function(error, element) {
//
//            if (!element.parent().siblings('.inputInfo').length) {
//                element.parent().addClass('error');
//                element.parent().after(error);
//            } else {
//                element.parent().addClass('error');
//                element.parent().siblings('.inputInfo').remove();
//                element.parent().after(error);
//            }
//
//        },
//        errorLabelContainer: '#errorBoxTop',
//        wrapper: '',
//        highlight: function(element) {
//            $(element).addClass('error');
//            $(element).parent().addClass("error");
//
//        },
//        unhighlight: function(element) {
//
//            $(element).parent().removeClass("error");
//            $(element).removeClass("error");
//        },
        invalidHandler: function() {
            // document.location.href = ".errorsBlock";
            F6.VALIDATIONS.highlightError();
        }

    });
};
/**
 * Form validation "Modifier mon adresse mail"
 */
F6.VALIDATIONS.formModifyMail = function() {
	var formElement = $('#formModifyMail');

    formElement.validate({
        onkeyup: false,
        onfocusout: false,
        rules: {
        	newemail: {
            	required:true
            },
            checkNewEmail: {
                required: true,
                email: true,
                equalTo: '#formNewEmail'
            },
            currentPassword: 'required'
        },
        messages: {

        	newemail: {
        		required: Globalize.localize("Email est nécessaire", "fr_FR" ),
        		email: Globalize.localize("Entrer une adresse email valide.", "fr_FR" )
        	},
        	checkNewEmail: {
        		required: Globalize.localize("Confirmation email est nécessaire", "fr_FR" ),
        		email: Globalize.localize("Entrer une adresse email valide.", "fr_FR" ),
        		equalTo: Globalize.localize("Les champs ma nouvelle adresse e-mail et confirmation de ma nouvelle adresse e-mail doivent être identiques", "fr_FR" )
        	},
        	currentPassword: Globalize.localize("Mot de passe nécessaire", "fr_FR" )
        },
//        errorPlacement: function(error, element) {
//
//            if (!element.parent().siblings('.inputInfo').length) {
//                element.parent().addClass('error');
//                element.parent().after(error);
//            } else {
//                element.parent().addClass('error');
//                element.parent().siblings('.inputInfo').remove();
//                element.parent().after(error);
//            }
//
//        },
//        errorLabelContainer: '#errorBoxTop',
//        wrapper: '',
//        highlight: function(element) {
//            $(element).addClass('error');
//            $(element).parent().addClass("error");
//
//        },
//        unhighlight: function(element) {
//        			alert(1);
//            $(element).parent().removeClass("error");
//            $(element).removeClass("error");
//        },
        invalidHandler: function() {
            // document.location.href = ".errorsBlock";
            F6.VALIDATIONS.highlightError();
        }
        

    });
};
/**
 * Form validation "Je me connecte à  mon compte Boutique"
 */
F6.VALIDATIONS.formInbentaDuplicataRemboursement= function() {
	// console.log($('.errorsBlock'));
	var formElement = $('#formInbentaDuplicataRemboursement');

	formElement.validate({
		onkeyup : false,
		onfocusout : false,
		rules : {
			emailParcel : 'required email',
			parcelNumber : 'required'
		},
		errorElement : 'span',
		wrapper : '',
		
		messages : {
			emailParcel : {
				required : Globalize.localize("Email est nécessaire", "fr_FR"),
				email : Globalize.localize("Entrer une adresse email valide.",
						"fr_FR")
			},
			parcelNumber : Globalize.localize("Numéro de colis est nécessaire",
					"fr_FR")
		},
		showErrors: function(errorMap, errorList) {
			var i, elements;
	        for ( i = 0; this.errorList[i]; i++ ) {
	            var error = this.errorList[i];
	            if ( this.settings.highlight ) {
	                this.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );
	            }
	            if(i==0){
	            	this.showLabel( error.element, Globalize.localize("Votre colis ou email ne sont pas reconnus, veuillez recommencer.",
					"fr_FR"));
	            }
	        }
	        if ( this.errorList.length ) {
	            this.toShow = this.toShow.add( this.containers );
	        }
	        if ( this.settings.success ) {
	            for ( i = 0; this.successList[i]; i++ ) {
	                this.showLabel( this.successList[i] );
	            }
	        }
	        if ( this.settings.unhighlight ) {
	            for ( i = 0, elements = this.validElements(); elements[i]; i++ ) {
	                this.settings.unhighlight.call( this, elements[i], this.settings.errorClass, this.settings.validClass );
	            }
	        }
	        this.toHide = this.toHide.not( this.toShow );
	        this.hideErrors();
	        this.addWrapper( this.toShow ).show();
	    },
		/*
		 * errorPlacement: function(error, element) {
		 * element.parent().addClass('errors');
		 * 
		 * 
		 * element.parent().after(error); },
		 */
		errorLabelContainer : '#errorBoxTop',
		highlight : function(element) {
			$(element).addClass('error');
			$(element).parent().parent().addClass("error-contener");

		},
		unhighlight : function(element) {

			$(element).parent().parent().removeClass("error-contener");
			$(element).removeClass("error");
		},
		invalidHandler : function() {
			// document.location.href = ".errorsBlock";
			F6.VALIDATIONS.highlightError("errorBoxTop");
		}

	});

};
/**
 * Form validation "Je me connecte à  mon compte Boutique"
 */
F6.VALIDATIONS.formConnect = function() {
	// console.log($('.errorsBlock'));
	var formElement = $('#formConnect');
//
//    var response;
//    $.validator.addMethod(
//        "ccuEnabled", 
//        function(value, element) {	   
//		    var http = new XMLHttpRequest();
//		    var url = formElement.attr('action');
//		    http.open('HEAD', url, false);
//		    var login = $('#j_username').val();
//		    var setEmailUrl = '/authentification/setEmail_in_session?email='+login;
//		    http.onreadystatechange = function() {
//		    	if(this.status == 405){
//		    		response = false;
//		    	}else{
		    		
//		    		$.ajax({
//		    			  async: false,
//		    	          type: 'POST',
//		    	          url: setEmailUrl,
//		    	          data: login,
//		    	          success: function(data, textStatus, jqXHR){
//		    	        	 
//		    	            if(data.success) {
//		    	            	response = true;
//		    	            }else{
//		    	            	response = false;
//		    	            }
//		    	          },
//		    	          cache: false,
//		    	          dataType: "json"
//		    	        });
	
	
//		    		response = true;
//		    	}
//		 
//		    };   
//		    http.send();  
//            return response;
//        },
//        "ccu KO"
//    );

	formElement.validate({
		onkeyup : false,
		onfocusout : false,
		rules : {
			username : 'ccuEnabled required email',
			password : 'required'
		},
		errorElement : 'span',
		wrapper : '',
		messages : {
			username : {
				required : Globalize.localize("Email est nécessaire", "fr_FR"),
				email : Globalize.localize("Entrer une adresse email valide.","fr_FR"),
				ccuEnabled: Globalize.localize("ccu.login.ko","fr_FR")
			},
			password : Globalize.localize("Mot de passe est nécessaire","fr_FR")
			
		},
		/*
		 * errorPlacement: function(error, element) {
		 * element.parent().addClass('errors');
		 * 
		 * 
		 * element.parent().after(error); },
		 */
		errorLabelContainer : '#errorBoxTop',
		highlight : function(element) {
			$(element).addClass('error');
			$(element).parent().parent().addClass("error-contener");

		},
		unhighlight : function(element) {
			$(element).parent().parent().removeClass("error-contener");
			$(element).removeClass("error");
		},
		invalidHandler : function() {
			// document.location.href = ".errorsBlock";
			F6.VALIDATIONS.highlightError("errorBoxTop");
		}

	});

};

F6.VALIDATIONS.popupValidation = function(param_string) {
	var formElement = $('#formAuthentication');

	// Validation for Popvalidation from T_migration_authentification.php
	if (param_string == 2) {

		formElement.validate({
			onkeyup : false,
			onfocusout : false,
			submitHandler : function(form) {

				self.close();
				return false;
			},
			rules : {
				formAdressEmail : 'required email',
				formPass : 'required'
			},
			messages : {
				formAdressEmail : {
					required : Globalize.localize("Email est nécessaire",
							"fr_FR"),
					email : Globalize.localize(
							"Entrer une adresse email valide.", "fr_FR")
				},
				formPass : Globalize.localize("Mot de passe est nécessaire",
						"fr_FR")
			},
			errorElement : "span",
			errorPlacement : function(error, element) {
				element.parent().parent().addClass('error-contener');
				element.parent().after(error);
			},
			errorLabelContainer : '#errorsBlock',
			highlight : function(element) {
				$(element).addClass('error');
				$(element).parent().parent().addClass("error-contener");
			},
			unhighlight : function(element) {
				$(element).parent().parent().removeClass("error-contener");
				$(element).removeClass("error");
			},
			invalidHandler : function() {
				window.setTimeout(function() {
					// $('html, body').animate({ scrollTop:
					// $("#errorBoxTop").offset().top }, 500);
					document.location.href = "#errorsBlock";
					//$('#errorBoxTop').find('ul li').eq(0).focus();
				}, 200);
			}

		});

		return false;
	}

	formElement.validate({
		onkeyup : false,
		onfocusout : false,
		submitHandler : function(form) {
			if (!$(window.opener).length)
				return false;

			window.opener.jQuery(".openpopup").children('a').remove();

			var d = new Date(), today_date = ("0" + d.getDate()).slice(-2)
					+ "/" + ("0" + (d.getMonth() + 1)).slice(-2) + "/"
					+ d.getFullYear(), date = today_date;

			window.opener.jQuery(".openpopup").children('h3').after(
					'<div class="textTranfert">Transfert effectué le ' + date
							+ '</div>').show();

			self.close();
			return false;
		},
		rules : {
			formAdressEmail : 'required email',
			formPass : 'required'
		},
		messages : {

			formAdressEmail : {
				required : Globalize.localize("Email est nécessaire", "fr_FR"),
				email : Globalize.localize("Entrer une adresse email valide.",
						"fr_FR")
			},
			formPass : Globalize.localize("Mot de passe est nécessaire",
					"fr_FR")

		},
		errorElement : "span",
		errorPlacement : function(error, element) {
			element.parent().addClass('errors');

			element.parent().after(error);

		},
		errorLabelContainer : '#errorsBlock',
		highlight : function(element) {
			$(element).addClass('error');
			$(element).parent().addClass("errors");

		},
		unhighlight : function(element) {

			$(element).parent().removeClass("errors");
			$(element).removeClass("error");
		},
		invalidHandler : function() {
			window.setTimeout(function() {
				// $('html, body').animate({ scrollTop:
				// $("#errorBoxTop").offset().top }, 500);
				document.location.href = "#errorsBlock";
				// $('#errorBoxTop').find('ul li').eq(0).focus();
			}, 200);
		}

	});

};

/**
 * Form validation "Je crée mon compte Boutique"
 */
F6.VALIDATIONS.formCree = function() {
	/* JIRA 4588 
	 * Fix association de la classe error sur le premier span du div id="errorBoxTop2"	 */
	
	 var errorBoxTop2 = document.querySelector( "#errorBoxTop2 span" );
	 var serverErrorBoxTop = document.querySelector( "#serverErrorBoxTop span" );
	 
	 var toggleErrorClass = function( elem ){
		 	if(elem != null) {
		 if ( elem.innerHTML.trim() === "" ){
			 elem.classList.remove( "error" );
		 } else {
			 elem.classList.add( "error" );
		 }
		 	}
	 }
	 
	 toggleErrorClass( errorBoxTop2 );
	 toggleErrorClass( serverErrorBoxTop );
	/* FIN JIRA 4588 */
	
	var formElement = $('#formCree');

	formElement.validate({
		onkeyup : false,
		onfocusout : false,
		rules : {
			email : 'required email'
		},
		messages : {

			email : {
				required : Globalize.localize("Email est nécessaire", "fr_FR"),
				email : Globalize.localize("Entrer une adresse email valide.",
						"fr_FR")
			}
		},
		errorElement : 'span',
		wrapper : '',
		errorLabelContainer : '#errorBoxTop2',
		errorPlacement : function(error, element) {
			element.parent().parent().children(':first').after(error);
		},
		highlight : function(element) {
			$(element).addClass('error');
			$(element).parent().parent().addClass("error-contener");

		},
		unhighlight : function(element) {
			$(element).removeClass('error');
			$(element).parent().parent().removeClass("error-contener");
		},
		invalidHandler : function() {
			// document.location.href = ".errorsBlock";
			window.setTimeout(function() {

				// document.location.href = "#errorBoxTop2";
			}, 200);
		}
	});

};

F6.VALIDATIONS.persoPro = function() {
	var container = $('#errorBoxTop');

	$('#errorBoxTop').html('<ul></ul>');

	$.validator.addMethod("numLibelle", function(value, element) {
		var val = $('#registerPartForm #localite').val();			
		if (val != null) {
			return val.match(/cedex/i);
		}
		return false;
	}, "N° et libellé de la voie dans nouvelles coordonnées est nécessaire");
	
	$.validator.addMethod( "specialSelect", function(value, element) {
		return !($(element).context.value == '-1' || $(element).context.value == 'none');
	}, "Error");

	$.validator.addMethod("nospaces", function(value, element) {
		// console.log("'" + value + "'");
		return !/\s/.test(value);
	}, "Pas d'espace");

	$.validator.addMethod("phoneValidation", function(value, element) {
		if (value.length < 10) {
			return false;
		}
		if (value.length > 20) {
			return false;
		}
		return /^(?=[^A-Za-z]+$).*[0-9].*$/.test(value);
	}, "Merci de saisir un numéro de téléphone valide");
	
	//controle communication par sms Part
	if(document.getElementById("register.acceptSMS") != null) {
		document.getElementById("register.acceptSMS").disabled = true;
		if($('#registerPartForm #phone') != null){
			var val = $('#registerPartForm #phone').val();			
			if(val != null && val != "") {
				document.getElementById("register.acceptSMS").disabled = false;
				} 
			
				//enregistrement de client
				$('#registerPartForm #phone').keyup(function(e) {
					controlerCommunicationSMSSouscription();
					});
				$('#registerPartForm #phone').on("mouseup", function(e) {
					controlerCommunicationSMSSouscription();
					});	
				$('#registerPartForm #phone').bind ("input propertychange", function (e) {
					controlerCommunicationSMSSouscription();
				});
				function controlerCommunicationSMSSouscription () {
					var val = $('#registerPartForm #phone').val(); 
					if(val != null) {
						document.getElementById("register.acceptSMS").disabled = false;
						} 
					if(val == "" || val == null){
						document.getElementById("register.acceptSMS").checked = false;
						document.getElementById("register.acceptSMS").disabled = true;
						}
				};
		 }
		//Information personnelles du client
		if(document.getElementById("register.phone") != null) {
			var registerPhoneInput = document.getElementById("register.phone");  
			registerPhoneInput.onkeyup = function(e) {
				controlerCommunicationSMSInfoPersonnelle();
				};
				registerPhoneInput.onmouseup = function(e) {
				controlerCommunicationSMSInfoPersonnelle();
				};
			registerPhoneInput.oninput= function (e) {
				 controlerCommunicationSMSInfoPersonnelle();
			};
			//For IF < 9
			registerPhoneInput.onpropertychange= function (e) {
				 controlerCommunicationSMSInfoPersonnelle();
			};
			function controlerCommunicationSMSInfoPersonnelle () {
				var val = document.getElementById("register.phone").value;  
				if(val != null) {
					document.getElementById("register.acceptSMS").disabled = false;
					document.getElementById("register.acceptSMSPartners").disabled = false;
					} 
				if(val == "" || val == null){
					document.getElementById("register.acceptSMS").checked = false;
					document.getElementById("register.acceptSMS").disabled = true;
					document.getElementById("register.acceptSMSPartners").checked = false;
					document.getElementById("register.acceptSMSPartners").disabled = true;
					}
				};
			controlerCommunicationSMSInfoPersonnelle(); 
		}		
	}
	
	
	
	//controle communication par sms Part parthners
	if(document.getElementById("register.acceptSMSPartners") != null) {
		document.getElementById("register.acceptSMSPartners").disabled = true;
		if($('#registerPartForm #phone') != null){
			var val = $('#registerPartForm #register\\.phone').val();			
			if(val != null && val != "") {
				document.getElementById("register.acceptSMSPartners").disabled = false;
				} 
				//enregistrement de client
				$('#registerPartForm #register\\.phone').keyup(function(e) {
					controlerCommunicationSMSPartnersSouscription();
					});
				$('#registerPartForm #register\\.phone').on("mouseup", function(e) {
					controlerCommunicationSMSPartnersSouscription();
					});	
				$('#registerPartForm #register\\.phone').bind ("input propertychange", function (e) {
					controlerCommunicationSMSPartnersSouscription();
				});
				function controlerCommunicationSMSPartnersSouscription () {
					var val = $('#registerPartForm #register\\.phone').val(); 
					if(val != null) {
						document.getElementById("register.acceptSMSPartners").disabled = false;
						} 
					if(val == "" || val == null){
						document.getElementById("register.acceptSMSPartners").checked = false;
						document.getElementById("register.acceptSMSPartners").disabled = true;
						}
				};
		 }
		//Information personnelles du client
//		if(document.getElementById("register.phone") != null) {
//			var registerPhoneInput = document.getElementById("register.phone");  
//			registerPhoneInput.onkeyup = function(e) {
//				controlerCommunicationSMSPartnersInfoPersonnelle();
//				};
//				registerPhoneInput.onmouseup = function(e) {
//				controlerCommunicationSMSPartnersInfoPersonnelle();
//				};
//			registerPhoneInput.oninput= function (e) {
//				 controlerCommunicationSMSPartnersInfoPersonnelle();
//			};
//			//For IF < 9
//			registerPhoneInput.onpropertychange= function (e) {
//				 controlerCommunicationSMSPartnersInfoPersonnelle();
//			};
//			function controlerCommunicationSMSPartnersInfoPersonnelle () {
//				var val = document.getElementById("register.phone").value;  
//				if(val != null) {
//					document.getElementById("register.acceptSMSPartners").disabled = false;
//					} 
//				if(val == "" || val == null){
//					document.getElementById("register.acceptSMSPartners").checked = false;
//					document.getElementById("register.acceptSMSPartners").disabled = true;
//					}
//				};
//			controlerCommunicationSMSPartnersInfoPersonnelle(); 
//		}		
	}
	
	// var dateErrorCalled = false;
	
	$.validator.addMethod('validatePwd', function(value, element) {
		var regexRulesCharSpe = /^[a-z0-9!\"#$%&'()*+,\-./:;<=>?@\[\]^_`{|}~\s]{8,128}$/i;
		var rtCharSpe = regexRulesCharSpe.test(value);

		regex = new RegExp("((?=.*[a-zA-Z])(?=.*\\d)(?=.*[\\W_])|(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)|(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_])).{8,128}");
        var rt = regex.test($.trim(value));

        if (rt && rtCharSpe) {
		    return true;
		} else {
		    return false;
		}
	});
	
	//validation nom et prénom
	$.validator.addMethod('validateName', function(value, element) {
		regex = new RegExp(/^([çéàëïèA-Za-z]{2}[ 'çéàëïèA-Za-z\*-]*)$/);
		return regex.test($.trim(value));
	});
	
	//validation longueur nom + prénom
	$.validator.addMethod('validateNameLength', function(value, element) {
		firstName = document.getElementById('firstName').value;
		lastName = document.getElementById('lastName').value;
		civilité = 0;
		
		// si Mr alors 2 caractères
		if (document.getElementById('civiliteMr').checked) {
			civilité = 2;
		}
		else if(document.getElementById('civiliteMme').checked){
			civilité = 3;
		}
		else{
			civilité = 0;
		}
		
		// La totalité + 2 espaces ne doit pas dépasser 38
		if (firstName.length + lastName.length + civilité + 2 > 38) {
			return false
		}
		else{
			return true;
		}
	});

	$('#registerPartForm').validate({
						rules : {
							email : {
								required : true,
								email: true
							},
							checkEmail : {
								required : true,
								email : true,
								equalTo : '#formEmail'
							},
							pwd : {
								required : true,
								minlength: 8,
								validatePwd:true
								
							},
							checkPwd : {
								required : true,
								equalTo : "#pwd"
							},
							lastName : {
								required : true,
								validateName:true,
								validateNameLength:true
							},
							firstName : {
								required : true,
								validateName:true,
								validateNameLength:true
							},
							phone : {
								// required: true,
								phoneValidation : true,
								maxlength : 20
							},
//							numLibelle : {
//								'required' : function(element) 
//				                {
//					                var val = $('input[id=localite]').val();	
//					                
//					          		if (val != null) {
//					          			if(val.match(/cedex/i)!=null){
//					          				return false;
//					          			}
//					          		}
//					          		return true;
//					                }
//							},
							codePostal : {
//								required : true,
//								maxlength : 5,
//								minlength : 5,
//								number : true
							},
//							localite : 'required',
							titleCode : {
								required: true
							},
//							day : 'specialselect',
//							month : 'specialSelect',
//							year : 'specialSelect',
							acceptConditions : 'required',
							countryCode : 'specialSelect'
						},
						groups : {
							dateGroup : 'day month year'
						// passwords: 'pwd checkPwd'
						},
						ignore : null,

						errorContainer : container,
						wrapper : 'li',
						errorClass : 'error-contener',

						errorPlacement : function(error, element) {
							element.parent().after(error);
							$("ul", container).append(error);
							$('#springErrorBoxTop').html('');
						},
						messages : {
							email : {
								required : Globalize.localize( "Email est nécessaire", "fr_FR"),
								email : Globalize.localize( "Entrer une adresse email valide.",	"fr_FR")
							},
							checkEmail : {
								required : Globalize.localize(
										"Confirmation email est nécessaire", "fr_FR"),
								email : Globalize.localize( "Entrer une adresse email valide.", "fr_FR"),
								equalTo : Globalize.localize( "Les champs mon adresse e-mail et confirmation de mon e-mail doivent être identiques", "fr_FR")
							},
							formPrenomn : Globalize.localize( "Prénom est nécessaire", "fr_FR"), 
							pwd : {
								required : Globalize.localize( "Mot de passe est nécessaire", "fr_FR"),
								minlength : Globalize.localize( "Merci de saisir un mot de passe d'au moins 8 caractères", "fr_FR"),
								validatePwd: Globalize.localize("newPasswordForm.pwd.invalidPart", "fr_FR" )
							},
							checkPwd : {
								equalTo : Globalize
										.localize(
												"Confirmation du mot de passe différente du mot de passe saisi",
												"fr_FR"),
								required : Globalize.localize(
										"ConfirmPassRequired", "fr_FR"),
								minlength : Globalize
										.localize(
												"Merci de saisir un mot de passe d'au moins 8 caractères",
												"fr_FR")
							},
							lastName : {
								required : Globalize.localize("Nom est nécessaire","fr_FR"),
								validateName : Globalize.localize("Nom non conforme","fr_FR"),
								validateNameLength : Globalize.localize("Nom Trop long","fr_FR")
							},
							firstName :	{
										required : Globalize.localize("Prénom est nécessaire", "fr_FR"),
										validateName : Globalize.localize("Prénom non conforme","fr_FR"),
										validateNameLength : Globalize.localize("Nom Trop long","fr_FR")
							},
							phone : {
								required : Globalize.localize( "Téléphone est nécessaire", "fr_FR"),
								number : Globalize.localize("Téléphone est invalide", "fr_FR")
							},
							numLibelle : Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR"),
							codePostal : {
								required : Globalize.localize( "Code Postal est nécessaire", "fr_FR"),
								number : Globalize.localize( "Merci de saisir un code postal valide", "fr_FR"),
								maxlength : Globalize.localize("Le code postal ne doit pas dépasser 5 chiffres.", "fr_FR")
							},
							localite : Globalize.localize("Localité est nécessaire", "fr_FR"),
							titleCode : Globalize.localize("Civilité est nécessaire", "fr_FR"),
//							day : Globalize
//									.localize(
//											"Date de naissance est nécessaire",
//											"fr_FR"),
//							month : Globalize
//									.localize(
//											"Date de naissance est nécessaire",
//											"fr_FR"),
//							year : Globalize
//									.localize(
//											"Date de naissance est nécessaire",
//											"fr_FR"),
							countryCode : Globalize.localize("Pays est nécessaire", "fr_FR"),
							acceptConditions : Globalize.localize("Connaissance des conditions générales est nécessaire","fr_FR")
						},
						// errorLabelContainer: $(".erroMenssage"),
						invalidHandler : function() {
							F6.VALIDATIONS.highlightError("errorBoxTop");
						},
						submitHandler: function(form) {
							var sbutton = form.getElementsByClassName("create-account-submit")[0];
							if(sbutton != undefined){
								var tagco_params = JSON.parse(JSON.stringify(sbutton.dataset).replace(/(tagc_)|(tagc)/g , ""));
								if (typeof (tc_events_1) === 'function') {
									tc_events_1(this, "CLICK", tagco_params);
								}
							}
							form.submit();
						}
					});
};

/** ***************************************************** */
/** ************************ V2 ************************* */
/** ***************************************************** */

/**
 * Form validation "Newsletter en pied de page"
 */
F6.VALIDATIONS.formNewsletterEmail = function() {
	var formElement = $('#newsEmail');
    var container = $('#newsEmailError');

	// newsEmailInput
	formElement.validate({
		onkeyup : false,
		onfocusout : false,
		rules : {
			newsEmailInput : 'required email'
		},
		messages : {
			newsEmailInput : {
				required : Globalize.localize("Email est nécessaire", "fr_FR"),
				email : Globalize.localize("Entrer une adresse email valide.",
						"fr_FR")
			}
		},
		errorContainer : container,
		errorElement: 'span',
		wrapper: '',
		invalidHandler : function() {
			window.setTimeout(function() {
				document.location.href = "#newsEmail";
			}, 200);
		},
		errorPlacement: function(error, element) {
			$('#newsEmailError').remove();
			 element.parent().parent().before(error);
		}
		
	});
};

/**
 * Form validation "Visualiser votre adresse" popup
 */
F6.VALIDATIONS.formVisualiserAdresse = function() {
    var formElement = $('#visualiser-adresse');
    
    formElement.validate({
        rules: {
            formVoie: 'required',
            formCodeP: {
                required: true,
                maxlength: 5,
                number: true
            },
            formLocalite: 'required',
            formPays: 'required',
            civilite: 'required',
            formNom: 'required',
            formPrenomn: 'required'
        },
        messages: {
            formCodeP: {
                //required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" )
//                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            formLocalite: Globalize.localize("Localité est nécessaire", "fr_FR" ),
            formVoie: Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" ),
            formPays: Globalize.localize("Pays est nécessaire", "fr_FR" ),
            civilite: Globalize.localize("Civilité est nécessaire", "fr_FR" ),
            formNom: Globalize.localize("Nom est nécessaire", "fr_FR" ),
            formPrenomn: Globalize.localize("Prénom est nécessaire", "fr_FR" )
        }
    });
};

/**
 * Form validation "Coordonnées du destinataire" popup step1
 */
F6.VALIDATIONS.formCoordonneesDestinataireParticulier = function() {

	$('#AjouterDestinataireInsererAdressePart').click(function(event) {
		
			$('#country').prop('disabled', false);
		
	});

	/* JIRA 5212 START */
 	var formInputs = document.querySelectorAll('#part-coordonneescolis input');
 	
 	var par = document.querySelector( "#coordonneesParticulier .formContent" );
 	
 	// affectation évènement keydown sur chaque input ( hors hidden & submit )
 	 for( var i = 0; i < formInputs.length; i ++ ){
 		
 		if( formInputs[i].getAttribute( "type" ) !== "hidden" && formInputs[i].getAttribute( "type" ) !== "submit" ){	
 			
 			formInputs[i].addEventListener( "keydown", function( ev ) {
 				// si return key
 				/* if( ev.keyCode === 13 ){
 					document.querySelector( "#AjouterDestinataireInsererAdressePart" ).click();
 				} */
 			});
 			
 		}
 		
 	}
 	/* JIRA 5212 END */

	var formElement = $('#part-formestape1');
	// BTKBACKLOG-9168 : Si part-formestape1 n'existe pas, utiliser l'id du formulaire adresse
	if (formElement.length == 0) {
		formElement = $('#coordonneesParticulier');
	}
	$.validator.addMethod("lreCountries", function(value, element) {

		if(  $( "form[action*='lettre-recommandee-en-ligne']" ).length>0){
	    	cPostal =  $( "#codePostal" ).val().substring(0, 3);
	    	return (cPostal == "975" || cPostal == "977" || cPostal == "978" || cPostal == "986" || cPostal == "987" || cPostal == "984" || cPostal == "988") ? false : true ;
		}
		else 
			return true;
	});
	//validation longueur nom + prénom
	$.validator.addMethod('validateNameLength', function(value, element) {
		var doValidate = $('#coordonneesParticulier').attr('validateNameLength');
		if (doValidate != "true"){
			return true;
		}
		firstName = document.getElementById('firstName').value;
		lastName = document.getElementById('lastName').value;
		civilité = 0;
		
		// si Mr alors 2 caractères
		if (document.getElementById('civiliteMr').checked) {
			civilité = 2;
		}
		else if(document.getElementById('civiliteMme').checked){
			civilité = 3;
		}
		else{
			civilité = 0;
		}
	
		// La totalité + 2 espaces ne doit pas dépasser 38
		return !(firstName.length + lastName.length + civilité + 2 > 38);
	});
	var isRequired = false; 
	
 	if($('input#country').val() == 'Irlande'){
 		$("input#codePostal").attr('value',""); 
 	}else{
 		isRequired = ($('input#popinDestColis').val() == 'destinataire' && $('input#codePostal').hasClass('required') == true);
 	}
	   
    var container = $('#error-coordonnees-part');
    
    $(container).html('<ul></ul>');

    return formElement.validate({
        errorContainer: container,
        wrapper : 'li',     
        messages: {
        	"addressId" : {
        		ownerLengthError: function () {
        			var mr = document.querySelector( "#civiliteMr" );
        			var mme = document.querySelector( "#civiliteMme" );
        			if( mr.checked ){
        				return Globalize.localize( "address.concatCiviliteMrNomPrenomMaxCharacter", "fr_FR" );
        			} else if( mme.checked || ( !mr.checked && !mme.checked ) ){
        				return Globalize.localize( "address.concatCiviliteMmeNomPrenomMaxCharacter", "fr_FR" );
        			}

        		}
        	},
            "titleCode": Globalize.localize("Civilité est nécessaire", "fr_FR" ),
            "lastName": {
            	required : Globalize.localize("Nom est nécessaire", "fr_FR" ),
            	validateNameLength : Globalize.localize("Nom Trop long","fr_FR")
            },
            "firstName": Globalize.localize("Prénom est nécessaire", "fr_FR" ), 
            "numLibelle": {
                required: Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR" ),
                lieuDitLibelleVoieFormat: Globalize.localize("Adresse N° et libellé de la voie non conforme","fr_FR")
            },
			"numLibelleDestPart": Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR" ),

            "localite": Globalize.localize("Localité est nécessaire", "fr_FR" ),
            "codePostal":Globalize.localize("Code postal est nécessaire", "fr_FR" ),
            "countryCode": {
            	required : Globalize.localize("Pays est nécessaire", "fr_FR" ),
            	lreCountries : Globalize.localize("lreCountries", "fr_FR" )
            },
            "codeLocalite":Globalize.localize("La concaténation des champs Code postal + (espace) + Localité ne doit pas dépasser 38 caractères", "fr_FR" ),
            "phone": Globalize.localize("N° de téléphone obligatoire", "fr_FR" ),
            "lieuDit": Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" ),
            "batiment": Globalize.localize("Bâtiment, Immeuble non conforme", "fr_FR" ),
        },
        rules: {
        	numLibelle : {
        		'required': function(element) 
                {
                  return $('input[id=localite]').val().toLowerCase().indexOf("cedex") < 0;
                },
                lieuDitLibelleVoieFormat: true
        	},
            numLibelleDestPart : {
                'required': function(element)
                {
                    return $('input[id=localite]').val().toLowerCase().indexOf("cedex") < 0;
                }
            },
            lieuDit : {
                lieuDitLibelleVoieFormat: true
            },
            batiment : {
                lieuDitLibelleVoieFormat: true
            },
            lastName : {
            	validateNameLength : true
            }
            // codeLocalite : {ownerLengthErr: ''},
            // addressId : {ownerLengthError: ''},
            // codePostal : {
	        	// 	'required': isRequired,
	        	// 	'alphanumeric' : true
	        	// },
            //
     		// countryCode : {
     		// 	required:true,
     		// 	lreCountries: function(element) {
     		// 		return  $( "form[action*='lettre-recommandee-en-ligne']" ).length>0;
             //  }
    		// }
        },
        errorPlacement : function(error, element) {
			element.parent().after(error);
			$("ul", container).append(error);
		},
		highlight : function(element) {
			$(element).parent().parent().addClass("error-contener");
		},
		unhighlight : function(element) {
			if ($(element).parent().length && $(element).parent().parent().length) {
				$(element).parent().parent().removeClass("error-contener");
			}
		},
        invalidHandler: function(form, validator) { 
        	
        	document.location.href = "#error-coordonnees-part";
			$('#error-coordonnees-part').find('ul li').eq(0).focus();
			$('input[name=titleCode]').focus();
			
			//tc_events_1(this, "CLICK",{'event': 'F', 'level2': '5', 'chapter1': 'LRE_Process_Achat', 'name':'Destinataires_Echec_LRE'});
        },
        submitHandler: function(form) {
console.log('######## submitHandler' );
        	// alert( "ok" );
            // F6.UI.formCoordonneesDestinataireParticulierAfterValid(form);
        }      
    });
};

/**
 * MDA
 * Form validation "MulitColis" popup step1
 */
F6.VALIDATIONS.formCoordonneesExpediteurPart= function(formElement) {


    // var formElement = $('#addAddressForm');

    // Validation n'est pas conforme ....
    $.validator.addMethod('validateTrue', function(value, element) {
        if(value == "")
        {
            return true;
        }
        else {
            regex = new RegExp(/^(['a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ]{2}[ 'a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9\*-]*)$/);
            return regex.test($.trim(value));
        }
    });
    ////

    $.validator.addMethod("phoneValidation", function(value, element) {
        if (value.length == 0) {
            return true;
        }
        if (value.length > 20) {
            return false;
        }
        return /^$|[+]?[0-9]{10,}/.test(value);
    }, "Le numéro de téléphone doit comprendre des chiffres et éventuellement le signe +");

    //validation nom et prénom
    $.validator.addMethod('validateName', function(value, element) {
        // regex = new RegExp(/^([A-Za-z]{2}[ 'A-Za-z0-9\*-]*)$/);
        regex = new RegExp(/^([a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9'\- ]*)$/);
        return regex.test($.trim(value));
    });

    $.validator.addMethod('validateChamps', function(value, element) {
        regex = new RegExp(/^([a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9.%'*/\-&@% ]*)$/);
        return regex.test($.trim(value));
    });

    jQuery.validator.addMethod ("alphanumeric", function(value, element) {
        return this.optional(element) || /^[^ ][A-Za-z0-9 ]*[^ ]$/.test(value);
    });

    $.validator.addMethod('validCp', function(value, element) {
        if($(element).data("error-cp-autocomplete") == "true") {
            return false;
        } else{
            return true;
        }

    });

    return formElement.validate({
        onfocusout: false,
        onblur : false,
        rules: {
            // form expediteur
            "lastName": {
                required: true,
                validateName: true,
                validateTrue: true
            },
            "firstName": {
                required: true,
                validateName: true,
                validateTrue: true
            },
            "numLibelle": {
                'required': function (element) {
                    if ($('input[id="localite"]').val().toLowerCase().indexOf("cedex") < 0) {
                        $("#partlibellevoiedepartinput label").html("N° et libellé de la voie*");
                        return true;
                    }
                    else {
                        $("#partlibellevoiedepartinput label").html("N° et libellé de la voie");
                        return false;
                    }
                },
                validateChamps: true
            },

            "appartement": {
                validateChamps: true
            },

            "batiment": {
                validateChamps: true
            },

            "lieuDit": {
                'validateChamps': function (element) {
                    if ($("input[name='numLibelle']").hasClass('ui-autocomplete-input')) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            },

            "codePostal": {
                required: true,
                alphanumeric: true,
                validCp : true
            },
            "localite": {
                required: true,
                validateName: true
            },
            "phone": {
                phoneValidation: true
            },
            "email": {
                email : true
            }
        },
        messages:
            {
                // form expediteur Part
                "titleCode": Globalize.localize("Civilité est nécessaire", "fr_FR" ),
                "lastName" : {
                    required : Globalize.localize("Nom est nécessaire","fr_FR"),
                    validateName : Globalize.localize("Nom non conforme - caractères spéciaux","fr_FR"),
                    validateTrue : Globalize.localize("Nom n'est pas conforme","fr_FR")
                },
                "firstName": {
                    required : Globalize.localize("Prénom est nécessaire","fr_FR"),
                    validateName : Globalize.localize("Prénom non conforme - caractères spéciaux","fr_FR"),
                    validateTrue : Globalize.localize("Prénom n'est pas conforme","fr_FR")
                },
                "numLibelle": {
                    required:Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR"),
                    validateChamps:Globalize.localize("Adresse N° et libellé de la voie non conforme", "fr_FR" )
                },
                "appartement" : {
                    validateChamps:Globalize.localize("Adresse Appartement, Etage non conforme", "fr_FR" )
                },
                "batiment" : {
                    validateChamps:Globalize.localize("Adresse Batiment, Immeuble non conforme", "fr_FR" )
                },

                "lieuDit" : {
                    validateChamps:Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" )
                },
                "codePostal": {
                    required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                    alphanumeric : Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
					validCp : "Le code postal n’est pas valide"
                },
                "localite": {
                    required : Globalize.localize("Ville est nécessaire", "fr_FR"),
                    validateName : Globalize.localize("Ville non conforme - caractères spéciaux","fr_FR")
                },
                "phone": {
                    required : Globalize.localize("N° de téléphone obligatoire", "fr_FR"),
                    phoneValidation : Globalize.localize("N° de téléphone non conforme", "fr_FR")
                },
                "email": Globalize.localize("Email erronee", "fr_FR" ),

            },
		errorElement : 'p',
		errorPlacement : function(error, element) {
			    element.parent().parent().parent().before(error);
			},
			highlight : function(element) {
			    $(element).parent().parent().parent().addClass("error-contener");
			},
			unhighlight : function(element) {
			    if ($(element).parent().parent().length && $(element).parent().parent().length) {
			        $(element).parent().parent().parent().removeClass("error-contener");
			    }
			},
        invalidHandler: function(form, validator) {

            // $('#error-coordonnees').show();
            // var errorMessage = "<span>Les informations que vous avez fournies ne vous permettent pas <br>d’accéder à l’étape suivante.<br\>" +
            //     "Merci de modifier votre saisie à partir des indications de couleur rouge, <br>positionnées près des erreurs correspondantes.</span>";
            //
            // $('#error-coordonnees').html(errorMessage);

            $('input[name=titleCode]').focus();

        },
        submitHandler: function(form) {

            form.submit();
            // alert( "ok" );
            // F6.UI.formCoordonneesDestinataireParticulierAfterValid(form);
        }
    });
};

F6.VALIDATIONS.formCoordonneesExpediteurPro= function(formElement) {


    // var formElement = $('#addAddressForm');

    // Validation n'est pas conforme ....
    $.validator.addMethod('validateTrue', function(value, element) {
        if(value == "")
        {
            return true;
        }
        else {
            regex = new RegExp(/^(['a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ]{2}[ 'a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9\*-]*)$/);
            return regex.test($.trim(value));
        }
    });
    ////

    $.validator.addMethod("phoneValidation", function(value, element) {
        if (value.length == 0) {
            return true;
        }
        if (value.length > 20) {
            return false;
        }
        return /^$|[+]?[0-9]{10,}/.test(value);
    }, "Le numéro de téléphone doit comprendre des chiffres et éventuellement le signe +");

    //validation nom et prénom
    $.validator.addMethod('validateName', function(value, element) {
        // regex = new RegExp(/^([A-Za-z]{2}[ 'A-Za-z0-9\*-]*)$/);
        regex = new RegExp(/^([a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9'\- ]*)$/);
        return regex.test($.trim(value));
    });

    //validation Service et Raison social
    $.validator.addMethod('validateServiceAndRaisonSocial', function(value, element) {
        // regex = new RegExp(/^([A-Za-z]{2}[ 'A-Za-z0-9\*-]*)$/);
        regex = new RegExp(/^([a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9.%'/\-&% ]*)$/);
        return regex.test($.trim(value));
    });

    $.validator.addMethod('validateChamps', function(value, element) {
        regex = new RegExp(/^([a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9.%'*/\-&@% ]*)$/);
        return regex.test($.trim(value));
    });

    jQuery.validator.addMethod ("alphanumeric", function(value, element) {
        return this.optional(element) || /^[^ ][A-Za-z0-9 ]*[^ ]$/.test(value);
    });

    $.validator.addMethod('validCp', function(value, element) {
        if($(element).data("error-cp-autocomplete") == "true") {
            return false;
        } else{
            return true;
        }

    });
    
    
    //var v = $(formElement + ' input[id="localite"]');
    
    return formElement.validate({
        onfocusout: false,
        onblur : false,
        rules: {
            // form expediteur
            "lastName": {
                validateName: true,
                validateTrue: true
            },
            "firstName": {
                validateName: true,
                validateTrue: true
            },
            "numLibelle": {
                'required': function (element) {
                    if ($(formElement).find($('input[id="localite"]')).val().toLowerCase().indexOf("cedex") < 0) {
                        $("#prolibellevoiedepartinput label").html("N° et libellé de la voie*");
                        return true;
                    }
                    else {
                        $("#prolibellevoiedepartinput label").html("N° et libellé de la voie");
                        return false;
                    }
                },
                validateChamps: true
            },
            "raisonSociale" : {
                required : true,
                validateServiceAndRaisonSocial : true
            },
            "service" : {
                validateServiceAndRaisonSocial:true
            },

            "batiment": {
                validateChamps: true
            },

            "lieuDit": {
                'validateChamps': function (element) {
                    if ($("input[name='numLibelle']").hasClass('ui-autocomplete-input')) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            },

            "codePostal": {
                required: true,
                alphanumeric: true,
				validCp : true
            },
            "localite": {
                required: true,
                validateName: true
            },
            "phone": {
                phoneValidation: true
            },
            "email": {
                email : true
            }
        },
        messages:
            {
                // form expediteur pro
                "lastName" : {
                    validateName : Globalize.localize("Nom non conforme - caractères spéciaux","fr_FR"),
                    validateTrue : Globalize.localize("Nom n'est pas conforme","fr_FR")
                },
                "firstName": {
                    validateName : Globalize.localize("Prénom non conforme - caractères spéciaux","fr_FR"),
                    validateTrue : Globalize.localize("Prénom n'est pas conforme","fr_FR")
                },
                "numLibelle": {
                    required:Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR"),
                    validateChamps:Globalize.localize("Adresse N° et libellé de la voie non conforme", "fr_FR" )
                },
                "batiment" : {
                    validateChamps:Globalize.localize("Adresse Batiment, Immeuble non conforme", "fr_FR" )
                },

                "lieuDit" : {
                    validateChamps:Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" )
                },
                "codePostal": {
                    required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                    alphanumeric : Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
					validCp : "Le code postal n’est pas valide"
                },
                "localite": {
                    required : Globalize.localize("Ville est nécessaire", "fr_FR"),
                    validateName : Globalize.localize("Ville non conforme - caractères spéciaux","fr_FR")
                },
                "phone": {
                    required : Globalize.localize("N° de téléphone obligatoire", "fr_FR"),
                    phoneValidation : Globalize.localize("N° de téléphone non conforme", "fr_FR")
                },

                "raisonSociale" : {
                    required : Globalize.localize('Raison sociale est nécessaire', "fr_FR"),
                    validateServiceAndRaisonSocial:Globalize.localize("Adresse raison sociale non conforme", "fr_FR" )
                },
                "service": {
                    validateServiceAndRaisonSocial:Globalize.localize("Adresse service non conforme", "fr_FR" )
                },
                "email": Globalize.localize("Email erronee", "fr_FR" ),
            },
        errorElement : 'p',
        errorPlacement : function(error, element) {
        	    element.parent().parent().parent().before(error);
        	},
        	highlight : function(element) {
        	    $(element).parent().parent().parent().addClass("error-contener");
        	},
        	unhighlight : function(element) {
        	    if ($(element).parent().parent().length && $(element).parent().parent().length) {
        	        $(element).parent().parent().parent().removeClass("error-contener");
        	    }
        	},
        invalidHandler: function(form, validator) {

            // $('#error-coordonnees').show();
            // var errorMessage = "<span>Les informations que vous avez fournies ne vous permettent pas <br>d’accéder à l’étape suivante.<br\>" +
            //     "Merci de modifier votre saisie à partir des indications de couleur rouge, <br>positionnées près des erreurs correspondantes.</span>";
            //
            // $('#error-coordonnees').html(errorMessage);

            $('input[name=titleCode]').focus();

        },
        submitHandler: function(form) {

            form.submit();
            // alert( "ok" );
            // F6.UI.formCoordonneesDestinataireParticulierAfterValid(form);
        }
    });
};
/**
 * MDA - Refonte Colis  - Step1
 * form expediteur validation js
 * form Destination validation js
 */
F6.VALIDATIONS.formParticulierStep1 = function(env, isValid) {

    var formElement = $('#' + env + '-formestep1');

    // Test pour déterminer si l'autocompletion est active (Même test que l'activation de l'auto-completion)

    var testIsoCode = function(){
        var dom = ["gp", "gf", "mq", "yt", "re", "bl", "mf", "pm"];
        var tom = ["nc", "tf", "pf", "wf"];

        var isoCode = $('#' + envTarget + '-destinationcolis #toIsoCode option:selected').val();

        if((dom.indexOf(isoCode) != -1 && isoCode != "pm") || isoCode == "fr" || isoCode == "mc"){
            return true;
        }else{
            return false;
        }

    };

    var isFrDomTom = testIsoCode();

    validFD = isValid;

    // Validation n'est pas conforme ....
    $.validator.addMethod('validateTrue', function(value, element) {
    	if(value == "")
		{
            return true;
		}
		else {
            regex = new RegExp(/^(['a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ]{2}[ 'a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9\*-]*)$/);
            return regex.test($.trim(value));
		}
    });
	////

    $.validator.addMethod("phoneValidation", function(value, element) {
        if (value.length == 0) {
            return true;
        }
        if (value.length > 20) {
            return false;
        }
        return /^$|[+]?[0-9]{10,}/.test(value);
    }, "Le numéro de téléphone doit comprendre 10 chiffres minimum et éventuellement le signe +");

    //validation nom et prénom
    $.validator.addMethod('validateName', function(value, element) {
        // regex = new RegExp(/^([A-Za-z]{2}[ 'A-Za-z0-9\*-]*)$/);
        regex = new RegExp(/^([a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9'\- ]*)$/);
        return regex.test($.trim(value));
    });

    //validation
    $.validator.addMethod('validateDangerousGoods', function(value, element) {
        return !$("#dangerousgoods").checked;
    });

    //validation Service et Raison social
    $.validator.addMethod('validateServiceAndRaisonSocial', function(value, element) {
        // regex = new RegExp(/^([A-Za-z]{2}[ 'A-Za-z0-9\*-]*)$/);
        regex = new RegExp(/^([a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9.%'/\-&% ]*)$/);
        return regex.test($.trim(value));
    });

    $.validator.addMethod('validateChamps', function(value, element) {
        regex = new RegExp(/^([a-zA-ZàáâãäåæçèéêëìíîïðñòóôõöœšÞùúûüýÿÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒŠþÙÚÛÜÝŸ0-9.%'*/\-&@% ]*)$/);
        return regex.test($.trim(value));
    });

    jQuery.validator.addMethod ("alphanumeric", function(value, element) {
        return this.optional(element) || /^[^ ][A-Za-z0-9 ]*[^ ]$/.test(value);
    });

    $.validator.addMethod('validCp', function(value, element) {
    	if($(element).data("error-cp-autocomplete") == "true") {
    		return false;
    	} else{
    		return true;
    	}
    });

    // Validation de la longeur du n° et libelle pour l'étranger
    $.validator.addMethod('validateLengthEtranger',function(value, element) {
        if(isFrDomTom!=testIsoCode()){
        isFrDomTom=testIsoCode();
        }
        var string=$.trim(value);
        if ((string.length<28 && !isFrDomTom)||isFrDomTom){
            return true;
        }else{
            return false;
        }
    });
    
    return formElement.validate({
        onfocusout: false,
        onblur : false,
        rules:
            {
            	// form expediteur Part
                "addressFormExpPart.lastName" : {
                    required : true,
                    validateName:true,
                    validateTrue : true
                },
                "addressFormExpPart.DangerousGoods" : {
                    validateTrue : true
                },
                "addressFormExpPart.firstName" : {
                    required : true,
                    validateName:true,
                    validateTrue : true
                },
                "addressFormExpPart.numLibelle" : {
                    'required': function(element)
                    {
                    	if($('input[id="addressFormExpPart.localite"]').val().toLowerCase().indexOf("cedex") < 0)
                        {
                            $("#partlibellevoiedepartinput label").html("N° et libellé de la voie*");
                        	return true;
                        }
                        else
                        {
                            $("#partlibellevoiedepartinput label").html("N° et libellé de la voie");
                            return false;
                        }
                    },
                    validateChamps:true
                },

				"addressFormExpPart.appartement" : {
                    validateChamps:true
				},

				"addressFormExpPart.batiment" : {
                    validateChamps:true
				},

                "addressFormExpPart.lieuDit" : {
                    'validateChamps': function(element)
                    	{	if($("input[name='addressFormExpPart.numLibelle']").hasClass('ui-autocomplete-input'))
							{
								return true;
							}
							else {
                    			return false;
							}
                        }
                },

                "addressFormExpPart.codePostal" : {
                    required : true,
                    alphanumeric : true,
                    validCp : true
                },
                "addressFormExpPart.localite" : {
                    required : true,
                    validateName:true
                },
                "addressFormExpPart.phone":{
                    phoneValidation : true
                },

                // form expediteur Pro
                "addressFormExpPro.DangerousGoods" : {
                    validateTrue : true
                },
                "addressFormExpPro.lastName" : {
                    required : false,
                    validateName:true,
                    validateTrue : true
                },
                "addressFormExpPro.firstName" : {
                    required : false,
                    validateName:true,
                    validateTrue : true,
                },
                "addressFormExpPro.numLibelle" : {
                    'required': function(element)
                    {
                        if($('input[id="addressFormExpPro.localite"]').val().toLowerCase().indexOf("cedex") < 0)
                        {
                            $("#prolibellevoiedepartinput label").html("N° et libellé de la voie*");
                            return true;
                        }
                        else
                        {
                            $("#prolibellevoiedepartinput label").html("N° et libellé de la voie");
                            return false;
                        }
                    },
                    validateChamps:true
                },
                "addressFormExpPro.raisonSociale" : {
                	required : true,
                    validateServiceAndRaisonSocial : true
				},
                "addressFormExpPro.service" : {
                    validateServiceAndRaisonSocial:true
				},
                "addressFormExpPro.appartement" : {
                    validateChamps:true
                },

                "addressFormExpPro.batiment" : {
                    validateChamps:true
                },

                "addressFormExpPro.lieuDit" : {
                    validateChamps:true
                },
                "addressFormExpPro.codePostal" : {
                    required : true,
                    validCp : true
                },
                "addressFormExpPro.localite" : {
                    required : true,
                    validateName:true
                },
                "addressFormExpPro.phone":{
                    phoneValidation : true
				},

                // form Destinataire Part
                "addressFormDestPart.lastName" : {
                    required : true,
                    validateName:true,
                    validateTrue : true
                },
                "addressFormDestPart.firstName" : {
                    required : true,
                    validateName:true,
                    validateTrue : true
                },
                "addressFormDestPart.numLibelle" : {
                    'required': function(element)
                    {
                        if($("input[id='addressFormDestPart.localite']").val().toLowerCase().indexOf("cedex") < 0)
                        {
                            $("#partlibellevoiearriveeinput label").html("N° et libellé de la voie*");
                            return true;
                        }
                        else
                        {
                            $("#partlibellevoiearriveeinput label").html("N° et libellé de la voie");
                            return false;
                        }
                    },
                    validateChamps:true,
                    validateLengthEtranger:true
                },
                "addressFormDestPart.appartement" : {
                    validateChamps:true
                },

                "addressFormDestPart.batiment" : {
                    validateChamps:true
                },

                "addressFormDestPart.lieuDit" : {
                    validateChamps:true
                },
                "addressFormDestPart.codePostal" : {
                    'required': function(element)
                    {
                        return $("input[name='addressFormDestPart.codePostal']").hasClass("required");
                    },
                    'alphanumeric' : true,
                    'validCp': true
                },
                "addressFormDestPart.email": {
                	email : true
				},
                "addressFormDestPart.localite" : {
                    required : true,
                    validateName:true
                },
                "addressFormDestPart.phone":{
                    phoneValidation : true
                },


                // form Destinataire Pro
                "addressFormDestPro.lastName" : {
                required : function(element)
                {
                    if($('#toIsoCode').val() === 'fr')
                    {
                        return false;
                    }
                    else
                    {
                        return true;
                    }
                	},
                    validateName:true,
                    validateTrue : true
                },
                "addressFormDestPro.firstName" : {
                    required : false,
                    validateName:true,
                    validateTrue : true
                },
                "addressFormDestPro.numLibelle" : {
                    'required': function(element)
                    {
                        if($("input[id='addressFormDestPro.localite']").val().toLowerCase().indexOf("cedex") < 0)
                        {
                            $("#prolibellevoiearriveeinput label").html("N° et libellé de la voie*");
                            return true;
                        }
                        else
                        {
                            $("#prolibellevoiearriveeinput label").html("N° et libellé de la voie");
                            return false;
                        }
                    },
                    validateChamps:true,
                    validateLengthEtranger:true
                },
                "addressFormDestPro.raisonSociale" : {
                	required : true,
                    validateServiceAndRaisonSocial:true
                },
                "addressFormDestPro.service" : {
                    validateServiceAndRaisonSocial:true
                },
                "addressFormDestPro.appartement" : {
                    validateChamps:true
                },

                "addressFormDestPro.batiment" : {
                    validateChamps:true
                },

                "addressFormDestPro.lieuDit" : {
                    validateChamps:true
                },
                "addressFormDestPro.codePostal" : {
                    'required': function(element)
                    {
                        return $("input[name='addressFormDestPro.codePostal']").hasClass("required");
                    },
                    'alphanumeric' : true,
                    'validCp' : true
                },
                "addressFormDestPro.email": {
                    email : true
                },
                "addressFormDestPro.localite" : {
                    required : true,
                    validateName:true
                },
                "addressFormDestPro.phone":{
                    phoneValidation : true,
                    required : function(element)
                   {
                       return $("input[name='addressFormDestPro.phone']").hasClass("required");
                   }
                },
            },
        messages: {
            "addressId" : {
                ownerLengthError: function () {
                    var mr = document.querySelector( "#civiliteMr" );
                    var mme = document.querySelector( "#civiliteMme" );
                    if( mr.checked ){
                        return Globalize.localize( "address.concatCiviliteMrNomPrenomMaxCharacter", "fr_FR" );
                    } else if( mme.checked || ( !mr.checked && !mme.checked ) ){
                        return Globalize.localize( "address.concatCiviliteMmeNomPrenomMaxCharacter", "fr_FR" );
                    }

                }
            },

        	// form expediteur Part"
        	"addressFormExpPart.DangerousGoods": Globalize.localize("dangerousGoods est necessaire", "fr_FR" ),
            "addressFormExpPart.titleCode": Globalize.localize("Civilité est nécessaire", "fr_FR" ),
            "addressFormExpPart.lastName" : {
                required : Globalize.localize("Nom est nécessaire","fr_FR"),
                validateName : Globalize.localize("Nom non conforme - caractères spéciaux","fr_FR"),
                validateTrue : Globalize.localize("Nom n'est pas conforme","fr_FR")
            },
            "addressFormExpPart.firstName": {
                required : Globalize.localize("Prénom est nécessaire","fr_FR"),
                validateName : Globalize.localize("Prénom non conforme - caractères spéciaux","fr_FR"),
                validateTrue : Globalize.localize("Prénom n'est pas conforme","fr_FR")
            },
            "addressFormExpPart.numLibelle": {
                required:Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR"),
				validateChamps:Globalize.localize("Adresse N° et libellé de la voie non conforme", "fr_FR" )
        	},
            "addressFormExpPart.appartement" : {
                validateChamps:Globalize.localize("Adresse Appartement, Etage non conforme", "fr_FR" )
            },
            "addressFormExpPart.batiment" : {
                validateChamps:Globalize.localize("Adresse Batiment, Immeuble non conforme", "fr_FR" )
            },

            "addressFormExpPart.lieuDit" : {
                validateChamps:Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" )
            },
            "addressFormExpPart.codePostal": {
                required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                alphanumeric : Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
                validCp : "Le code postal n’est pas valide"
            },
            "addressFormExpPart.localite": {
            	required : Globalize.localize("Ville est nécessaire", "fr_FR"),
            	validateName : Globalize.localize("Ville non conforme - caractères spéciaux","fr_FR")
        	},
            "addressFormExpPart.phone": {
                required : Globalize.localize("N° de téléphone obligatoire", "fr_FR"),
                phoneValidation : Globalize.localize("N° de téléphone non conforme", "fr_FR")
        	},


            // form expediteur Pro
            "addressFormExpPro.DangerousGoods": Globalize.localize("dangerousGoods est necessaire", "fr_FR" ),
            "addressFormExpPro.lastName" : {
                validateName : Globalize.localize("Nom non conforme - caractères spéciaux","fr_FR"),
                validateTrue : Globalize.localize("Nom n'est pas conforme","fr_FR")
            },
            "addressFormExpPro.firstName": {
                validateName : Globalize.localize("Prénom non conforme - caractères spéciaux","fr_FR"),
                validateTrue : Globalize.localize("Prénom n'est pas conforme","fr_FR")
            },
            "addressFormExpPro.raisonSociale" : {
                required : Globalize.localize('Raison sociale est nécessaire', "fr_FR"),
                validateServiceAndRaisonSocial:Globalize.localize("Adresse raison sociale non conforme", "fr_FR" )
            },
            "addressFormExpPro.numLibelle": {
                required:Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR"),
                validateChamps:Globalize.localize("Adresse N° et libellé de la voie non conforme", "fr_FR" )
            },
            "addressFormExpPro.service": {
                validateServiceAndRaisonSocial:Globalize.localize("Adresse service non conforme", "fr_FR" )
            },
            "addressFormExpPro.appartement" : {
                validateChamps:Globalize.localize("Adresse Appartement, Etage non conforme", "fr_FR" )
            },
            "addressFormExpPro.batiment" : {
                validateChamps:Globalize.localize("Adresse Batiment, Immeuble non conforme", "fr_FR" )
            },

            "addressFormExpPro.lieuDit" : {
                validateChamps:Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" )
            },
            "addressFormExpPro.codePostal": {
                required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                alphanumeric : Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
                validCp : "Le code postal n’est pas valide"
            },
            "addressFormExpPro.localite": {
                required : Globalize.localize("Ville est nécessaire", "fr_FR"),
            	validateName : Globalize.localize("Ville non conforme - caractères spéciaux","fr_FR")
        	},
            // "codeLocalite":Globalize.localize("La concaténation des champs Code postal + (espace) + Localité ne doit pas dépasser 38 caractères", "fr_FR" ),
            "addressFormExpPro.phone": {
            	required : Globalize.localize("N° de téléphone obligatoire", "fr_FR"),
            	phoneValidation: Globalize.localize("N° de téléphone non conforme", "fr_FR"),
        	},

            // form destinateur Part
            "addressFormDestPart.titleCode": Globalize.localize("Civilité est nécessaire", "fr_FR" ),
            "addressFormDestPart.lastName" : {
                required : Globalize.localize("Nom est nécessaire","fr_FR"),
                validateName : Globalize.localize("Nom non conforme - caractères spéciaux","fr_FR"),
                validateTrue : Globalize.localize("Nom n'est pas conforme","fr_FR")
            },
            "addressFormDestPart.firstName": {
                required : Globalize.localize("Prénom est nécessaire","fr_FR"),
                validateName : Globalize.localize("Prénom non conforme - caractères spéciaux","fr_FR"),
                validateTrue : Globalize.localize("Prénom n'est pas conforme","fr_FR")
            },
            "addressFormDestPart.numLibelle": {
                required:Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR"),
                validateChamps : Globalize.localize("Adresse N° et libellé de la voie non conforme", "fr_FR" ),
                validateLengthEtranger:"Adresse N° et libellé de la voie trop long (27 Caractères max.)"
            },
            "addressFormDestPart.appartement" : {
                validateChamps:Globalize.localize("Adresse Appartement, Etage non conforme", "fr_FR" )
            },
            "addressFormDestPart.batiment" : {
                validateChamps:Globalize.localize("Adresse Batiment, Immeuble non conforme", "fr_FR" )
            },

            "addressFormDestPart.lieuDit" : {
                validateChamps:Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" )
            },
            "addressFormDestPart.codePostal": {
                required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                alphanumeric : Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
                validCp : "Le code postal n’est pas valide"
//                number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
//                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            "addressFormDestPart.localite": {
                required : Globalize.localize("Ville est nécessaire", "fr_FR"),
                validateName : Globalize.localize("Ville non conforme - caractères spéciaux","fr_FR")
            },
            // "codeLocalite":Globalize.localize("La concaténation des champs Code postal + (espace) + Localité ne doit pas dépasser 38 caractères", "fr_FR" ),
            "addressFormDestPart.phone": {
                required : Globalize.localize("N° de téléphone obligatoire", "fr_FR"),
                phoneValidation: Globalize.localize("N° de téléphone non conforme", "fr_FR"),
            },
            "addressFormDestPart.email": Globalize.localize("Email erronee", "fr_FR" ),

            // form destinateur Pro
            "addressFormDestPro.lastName" : {
            	required : Globalize.localize("Nom est nécessaire","fr_FR"),
                validateName : Globalize.localize("Nom non conforme - caractères spéciaux","fr_FR"),
                validateTrue : Globalize.localize("Nom n'est pas conforme","fr_FR")
            },
            "addressFormDestPro.firstName": {
                validateName : Globalize.localize("Prénom non conforme - caractères spéciaux","fr_FR"),
                validateTrue : Globalize.localize("Prénom n'est pas conforme","fr_FR")
            },
            "addressFormDestPro.raisonSociale" : {
                required : Globalize.localize('Raison sociale est nécessaire', "fr_FR"),
                validateServiceAndRaisonSocial : Globalize.localize("Adresse raison sociale non conforme", "fr_FR" )
            },
            "addressFormDestPro.service" : {
                validateServiceAndRaisonSocial : Globalize.localize("Adresse service non conforme", "fr_FR" )
            },
            "addressFormDestPro.numLibelle": {
                required : Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR"),
                validateChamps : Globalize.localize("Adresse N° et libellé de la voie non conforme", "fr_FR" ),
                validateLengthEtranger:"Adresse N° et libellé de la voie trop long (27 Caractères max.)"
            },
            "addressFormDestPro.appartement" : {
                validateChamps : Globalize.localize("Adresse Appartement, Etage non conforme", "fr_FR" )
            },
            "addressFormDestPro.batiment" : {
                validateChamps:Globalize.localize("Adresse Batiment, Immeuble non conforme", "fr_FR" )
            },

            "addressFormDestPro.lieuDit" : {
                validateChamps:Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" )
            },
            "addressFormDestPro.codePostal": {
                required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                alphanumeric : Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
                validCp : "Le code postal n’est pas valide"
//                number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
//                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            "addressFormDestPro.localite": {
                required : Globalize.localize("Ville est nécessaire", "fr_FR"),
                validateName : Globalize.localize("Ville non conforme - caractères spéciaux","fr_FR")
            },
            // "codeLocalite":Globalize.localize("La concaténation des champs Code postal + (espace) + Localité ne doit pas dépasser 38 caractères", "fr_FR" ),
            "addressFormDestPro.phone": {
                required : Globalize.localize("N° de téléphone obligatoire", "fr_FR"),
                phoneValidation: Globalize.localize("N° de téléphone non conforme", "fr_FR"),
            },
            "addressFormDestPro.email": Globalize.localize("Email erronee", "fr_FR" ),

        },
        errorPlacement : function(error, element) {
            element.parent().before(error);


        },
        highlight : function(element, error) {
            $(element).parent().parent().addClass("error-contener");
            // if($(element).attr("id").indexOf("Name") != -1 && $(element).parent().parent().find('label.error').length > 0 && $(element).parent().parent().find('label.error').html().length> 60)
            // {
            //     $(element).parent().parent().parent().parent().parent().addclass("errornomprenom1");
            // }

        },
        unhighlight : function(element) {
            if ($(element).parent().length && $(element).parent().parent().length) {
                $(element).parent().parent().removeClass("error-contener");
            }
        },
        invalidHandler: function(form, validator) {


            // document.location.href = "#error-coordonnees";

            if(!$("#dangerousgoods").checked){
                $("#blocDangerousGoods").addClass("checkboxError");
            }
            $('#error-coordonnees').show();
            var errorMessage = "Les informations que vous avez fournies ne vous permettent pas d’accéder à l’étape suivante<br\>" +
                "Merci de modifier votre saisie à partir des indications de couleur rouge, positionnées près des erreurs correspondantes";

            $('#error-coordonnees').html(errorMessage);
            // var offset = $('.blockColisDepartDestination').offset();
            // offset.left -= 60;
            // offset.top -= 100;
            // $('html, body').animate({
            //     scrollTop: offset.top,
            //     scrollLeft: offset.left
            // });

            // $('#partciviliteMr').focus();
                $('input[name="addressFormExpPart.titleCode"]').focus();


        },
        submitHandler: function(form) {
        	// validation de toute la page
            if(validFD)
            {
                form.submit();
            }

            // alert( "ok" );
            // F6.UI.formCoordonneesDestinataireParticulierAfterValid(form);
        }
    });


};

/**       **/

F6.VALIDATIONS.formCoordonneesDestinataireProfessionnel = function() {
	$.validator.addMethod("lreProCountries", function(value, element) {
		if( $( "form[action*='lettre-recommandee-en-ligne']" ).length){
										   
	    	cPostal =  $( "#codePostalPro" ).val().substring(0, 3);
	    	/** BTKTMA-1547 Supression des préfixes 977 et 978
	    	TParentin
	    	*/
	    	return (cPostal == "975" || cPostal == "986" || cPostal == "987" || cPostal == "984" || cPostal == "988") ? false : true ;
		}
		else 
			return true;
	});
	var isRequired = false; 
 	if($('input#country').val() == 'Irlande'){
 		$("input#codePostalPro").attr('value',""); 
 	}else{
 		 isRequired = ($('input#popinDestColis').val() == 'destinataire' && $('input#codePostal').hasClass('required') == true);
 	}
    var formElement = $('#coordonneesProfessionnel');
    var container = $('#error-coordonnees-pro');
    $(container).html('<ul></ul>');
    return formElement.validate({
        errorContainer: container,
        wrapper : 'li',     
        messages: {
            "codePostal": {
                required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                alphanumeric : Globalize.localize("Merci de saisir un code postal valide", "fr_FR" )
//                number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
//                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            "raisonSociale": Globalize.localize("Raison sociale est nécessaire", "fr_FR" ),
            "titleCode": Globalize.localize("Civilité est nécessaire", "fr_FR" ),
            "lastName": Globalize.localize("Nom est nécessaire", "fr_FR" ),
            "firstName": Globalize.localize("Prénom est nécessaire", "fr_FR" ), 
            "localite": Globalize.localize("Localité est nécessaire", "fr_FR" ),
            // "numLibelle": Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" ),
            "numLibelle": Globalize.localize("N° et libellé de la voie obligatoire", "fr_FR" ),
            "countryCode": {
            	required : Globalize.localize("Pays est nécessaire", "fr_FR" ),
            	lreProCountries : Globalize.localize("lreCountries", "fr_FR" )
            },
            "phone": Globalize.localize("N° de téléphone obligatoire", "fr_FR" ),
            "lieuDit": Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" ),
            "batiment": Globalize.localize("Bâtiment, Immeuble non conforme", "fr_FR" ),
        },
        rules:
        {
        	numLibelle : {
        		'required': function(element) 
                {
                  return $('input[id=localitePro]').val().toLowerCase().indexOf("cedex") < 0;
                }
        	},
        	countryCode : {
	 			required:true,
	 			lreProCountries: function(element) {
	           	 return  $( "form[action*='lettre-recommandee-en-ligne']" ).length>0;
	 			}
        	},
        	codePostal : {
        		'required': isRequired,
        		'alphanumeric' : true
        	},
        	lieuDit : {
                lieuDitLibelleVoieFormat: true
            },
            batiment : {
                lieuDitLibelleVoieFormat: true
            },
        },
        errorPlacement : function(error, element) {
			element.parent().after(error);
			$("ul", container).append(error);
		},
		highlight : function(element) {
			$(element).parent().parent().addClass("error-contener");

		},
		unhighlight : function(element) {
			if ($(element).parent().length && $(element).parent().parent().length) {
				$(element).parent().parent().removeClass("error-contener");
			}
		},
        invalidHandler : function() 
		{   
			document.location.href = "#error-coordonnees-pro";
			$('#error-coordonnees-pro').find('ul li').eq(0).focus();
			$("#raisonSocialePro").focus();
			
			tc_events_1(this, "CLICK",{'event': 'F', 'level2': '5', 'chapter1': 'LRE_Process_Achat', 'name':'Destinataires_Echec_LRE'});
		},
        submitHandler: function(form) {
            // F6.UI.formCoordonneesDestinataireParticulierAfterValid(for
        }
    });
};

F6.VALIDATIONS.formCoordonneesDestinataireProfessionnelPerso = function() {
	
	$.validator.addMethod("lreProCountries", function(value, element) {
		if( $( "form[action*='lettre-recommandee-en-ligne']" ).length){

	    	cPostal =  $( "#codePostalPro" ).val().substring(0, 3);
	    	/** BTKTMA-1547 Supression des préfixes 977 et 978
	    	TParentin
	    	*/
	    	return (cPostal == "975" || cPostal == "986" || cPostal == "987" || cPostal == "984" || cPostal == "988") ? false : true ;
		}
		else 
			return true;
	});
    var formElement = $('#coordonneesProfessionnelPerso');
    var container = $('#error-coordonnees-pro');
    $(container).html('<ul></ul>');
    return formElement.validate({
        errorContainer: container,
        messages: {
        	 "titleCode": Globalize.localize("Civilité est nécessaire", "fr_FR" ),
        	 "lastName": Globalize.localize("Nom est nécessaire", "fr_FR" ),
        	 "firstName": Globalize.localize("Prénom est nécessaire", "fr_FR" ),
            "codePostal": {
              required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
              number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
               maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            "raisonSociale": Globalize.localize("Raison sociale est nécessaire", "fr_FR" ),
            "localite": Globalize.localize("Localité est nécessaire", "fr_FR" ),
            "numLibelle": {
                required: Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" ),
                lieuDitLibelleVoieFormat: Globalize.localize("Adresse N° et libellé de la voie non conforme","fr_FR")
            },
            "countryCode": {
            	required : Globalize.localize("Pays est nécessaire", "fr_FR" ),
            	lreProCountries : Globalize.localize("lreCountries", "fr_FR" )
            },
            "lieuDit": Globalize.localize("Adresse Lieu-dit ou BP non conforme", "fr_FR" )
        },
        rules:
        {
        	//titleCode: 'required',
        	localite: 'required',
        	numLibelle : {
        		'required': function(element) 
                {
                  return $('input[id=localitePro]').val().toLowerCase().indexOf("cedex") < 0;
                },
                lieuDitLibelleVoieFormat: true
        	},
        	countryCode : {
	 			required:true,
	 			lreProCountries: function(element) {
	           	 return  $( "form[action*='lettre-recommandee-en-ligne']" ).length>0;
	 			}
        	},
            lieuDit : {
                lieuDitLibelleVoieFormat : true
            }
        },
        invalidHandler : function() 
		{   
			document.location.href = "#error-coordonnees-pro";
			$('#error-coordonnees-pro').find('ul li').eq(0).focus();
			$("#raisonSocialePro").focus();
			
			//tc_events_1(this, "CLICK",{'event': 'F', 'level2': '5', 'chapter1': 'LRE_Process_Achat', 'name':'Destinataires_Echec_LRE'});
		},
        submitHandler: function(form) {
            // F6.UI.formCoordonneesDestinataireParticulierAfterValid(for
        }
    });
};

F6.VALIDATIONS.formAjouterDestinataire = function() {
    var formElement = $('#ajouter-destinataire');
    var container = $('#error-destinataires');
    return formElement.validate({
        errorContainer: container,
        errorElement: 'span',
        errorLabelContainer: '#error-destinataires',
        
        messages: {
            lettres: {
                required: Globalize.localize("Merci de sélectionner au moins un destinataire", "fr_FR" )

            }
        },
        submitHandler: function(form) {
            // F6.UI.formCoordonneesDestinataireParticulierAfterValid(form);
        }

        /*
		 * , errorPlacement: function(error, element) {
		 * element.parent().parent().children(':first').after(error); },
		 * highlight: function(element) { $(element).addClass('error');
		 * $(element).parent().addClass("errors");
		 *  }, unhighlight: function(element) {
		 * $(element).parent().removeClass("errors");
		 * $(element).removeClass("error"); }, invalidHandler: function() {
		 * window.setTimeout(function() { document.location.href =
		 * "#error-adresse"; }, 200); }
		 */
    });
};
/**
 * Form validation "Reexpedition" Step1
 */
F6.VALIDATIONS.formReexpeditionStep1 = function() {
    var formElement = $('#formReexStep1');
    formElement.validate({
        rules: {
            date_effet_souhaitee: {
                required: true,
                date: true
            },
            civility: 'required',
            name: 'required',
            prenom: 'required',
            drt_prenom: 'required',
            drt_nom: 'required',
            nom_voix: 'required',
            code_p: {
                required: true,
                maxlength: 5,
                number: true
            },
            localite: 'required',
            nom_voix2: 'required',
            code_p2: {
                required: true,
                maxlength: 5,
                number: true
            },
            localite2: 'required',
            droit: 'required'
        },
        messages: {
            date_effet_souhaitee: {
                required: Globalize.localize("Une date est necessaire", "fr_FR" ),
                date: Globalize.localize("Merci de rentrer une adresse valide JJ/MM/AAAA", "fr_FR" )
            },
            civility: Globalize.localize("Civilité est nécessaire", "fr_FR" ),
            name: Globalize.localize("Nom est nécessaire", "fr_FR" ),
            prenom: Globalize.localize("Prénom est nécessaire", "fr_FR" ),
            drt_prenom: Globalize.localize("Prénom de l'ayant droit est nécessaire", "fr_FR" ),
            drt_nom: Globalize.localize("Nom de l'ayant droit est nécessaire", "fr_FR" ),
            nom_voix: Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" ),
            code_p: {
                //required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            localite: Globalize.localize("Localité est nécessaire", "fr_FR" ),
            nom_voix2: Globalize.localize("N° et libellé de la voie dans nouvelles coordonnées est nécessaire", "fr_FR" ),
            code_p2: {
                required: Globalize.localize("Code Postal dans nouvelles coordonnées est nécessaire", "fr_FR" ),
                number: Globalize.localize("Merci de saisir un code postal dans nouvelles coordonnées valide", "fr_FR" ),
                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères pour le code postal dans nouvelles coordonnées ", "fr_FR" )
            },
            localite2: Globalize.localize("Localité dans nouvelles coordonnées est nécessaire", "fr_FR" ),
            droit: Globalize.localize("Connaissance des conditions générales est nécessaire", "fr_FR" )
        }
    });
};

/**
 * Form validation "Reexpedition" Step3
 */
F6.VALIDATIONS.formReexpeditionStep3 = function() {
    var formElement = $('#formReexStep3');
    var container = $('#errorBoxTop');
    $('#errorBoxTop').html('<ul></ul>');
    formElement.validate({
        onkeyup: false,
        onfocusout: false,
        rules: {
        },
        errorContainer: container,
        wrapper: 'li',
        errorPlacement: function(error, element) {
            element.parent().after(error);
            if (element.attr('type') != 'checkbox' && element.attr('type') != 'radio') {
                element.parent().parent().addClass('error-contener');
            }
            $(container).find("ul").append(error);
        },
        messages: {
            name_honneur: Globalize.localize("merci de remplir toutes les informations nécessaires", "fr_FR" ),
            reexpedier: Globalize.localize("Reexpédier est nécessaire", "fr_FR" ),
            demande_reexpedition: Globalize.localize("Demande reexpedition est nécessaire", "fr_FR" ),
            reexpedtion_minimum: Globalize.localize("Reexpedtion minimum est nécessaire", "fr_FR" ),
            reexpedtion_majeur: Globalize.localize("Reexpedtion majeur est nécessaire", "fr_FR" ),
            affaires_famailales: Globalize.localize("Affaires famailales est nécessaire", "fr_FR" ),
            demenage_entreprise: Globalize.localize("Demenage entreprise est nécessaire", "fr_FR" )
        },
        errorLabelContainer: $(".erroMenssage")
    });
};

/**
 * Form validation "Recharge Compte"
 */
F6.VALIDATIONS.formRechargeAccount = function() {
    var formElement = $('#formRechargeAccount');
    var container = $('#errorBoxTop');
    $('#errorBoxTop').html('<ul style= "padding:15px 0 0 0"></ul>');
    formElement.validate({
        rules: {
            credit: {
                required: true,
                priceValidationCPP: true,
                priceValidationRechargeCPP : true
            }
        },
        messages: {
            credit: {
                required: Globalize.localize("Vous n'avez saisi aucun montant", "fr_FR" ),
                priceValidationCPP: Globalize.localize("credit.valide", "fr_FR" ),
                priceValidationRechargeCPP : Globalize.localize("credit.decimalValue.valide", "fr_FR" )
            }
        },
        wrapper: 'li',
        errorContainer: container,
        errorPlacement: function(error, element) {
            element.parent().after(error);
            $(container).find("ul").append(error);
        },
        
        submitHandler: function(form) {
        	submitted = $('#formRechargeAccount input[type=submit]').attr('submitted');
    		
        	if(submitted == undefined || submitted == "false")
        	{
        		$('#formRechargeAccount input[type=submit]').attr('submitted', true);
        		form.submit();
        	}
        },
        invalidHandler: function() {
            // re-enable the button here as validation has failed
        	$('#formRechargeAccount input[type=submit]').attr('submitted', false);
        },
        
        submitHandler: function(form) {
        	submitted = $('#formRechargeAccount input[type=submit]').attr('submitted');
    		
        	if(submitted == undefined || submitted == "false")
        	{
        		$('#formRechargeAccount input[type=submit]').attr('submitted', true);
        		form.submit();
        	}
        },
        invalidHandler: function() {
            // re-enable the button here as validation has failed
        	$('#formRechargeAccount input[type=submit]').attr('submitted', false);
        }
        
    });
};

/**
 * Form validation "Demande du catalogue PROXISERVICES"
 */
F6.VALIDATIONS.formDemandeCatalogue = function() {
	var formElement = $('#receiveGuide');
    var container = $('#guideEmailError');

	// newsEmailInput
	formElement.validate({
		onkeyup : false,
		onfocusout : false,
		rules : {
			guideEmailInput : 'required email'
		},
		messages : {
			guideEmailInput : {
				required : Globalize.localize("Email est nécessaire", "fr_FR"),
				email : Globalize.localize("Entrer une adresse email valide.",
						"fr_FR")
			}
		},
		errorContainer : container,
		errorElement: '',
		wrapper: 'li',
		invalidHandler : function() {
			window.setTimeout(function() {
				document.location.href = "#receiveGuide";
			}, 200);
		},
		errorPlacement: function(error, element) {
			$('#guideEmailError').remove();
			$("ul", container).append(error);
		},
        highlight: function(element) {
            $(".ft-proxy-part-input-mail").css("box-shadow: 0 0 3px #CC0000;");
            //console.log(element);
            //$(element).css("box-shadow: 0 0 3px #CC0000;");
            //$(element).parent().css("box-shadow: 0 0 3px #CC0000;");
        },
        highlight: function(element) {
            $(".ft-proxy-part-input-mail").css("box-shadow: 0 0 3px #CC0000;");
            //console.log(element);
            //$(element).css("box-shadow: 0 0 3px #CC0000;");
            //$(element).parent().css("box-shadow: 0 0 3px #CC0000;");
        }
	});
};


/**
 * Form validation USer Account Contact Book
 */
F6.VALIDATIONS.formBookCoordonneesDestinataireParticulier = function() {

    var formElement = $('#bookCoordonneesParticulier');
    var container = $('#error-coordonnees-part')
    $(container).html('<ul></ul>');
    var contactEmail = $('input[id=contactEmail]').val();
    if(contactEmail != undefined && contactEmail.length) {
    	//$('#codePostal').removeClass('required');
    }
    $(container).html('<ul></ul>');
    $(container).html('<ul></ul>');
	formElement.validate({
	    errorElement : 'span',
		wrapper : 'li',
		rules : {
        	numLibelle : {
        		'required': function(element) 
                {
    				var email = $('input[id=contactEmail]').val();
        			var localite = $('input[id=localite]').val();
        			var codePostal = $('input[id=codePostal]').val();
        			var batiment = $('input[id=batiment]').val();
        			var appartement = $('input[id=appartement]').val();
        			var lieuDit = $('input[id=lieuDit]').val();
        			if(email.length == 0 ) {
        				return $('input[id=localite]').val().toLowerCase().indexOf("cedex") < 0  ;
        			} else {
        				return  (localite.length > 0 && $('input[id=localite]').val().toLowerCase().indexOf("cedex") < 0) || (codePostal.length > 0 && $('input[id=localite]').val().toLowerCase().indexOf("cedex") < 0)
        				|| appartement.length > 0 || batiment.length > 0 || lieuDit.length > 0;
        			}
                },
                libelleVoieFormat: true
        	},
			codePostal : {
				'required': function(element)
				{
				    return $("#codePostal").hasClass("required");
				}
                //maxlength : 5,
				//number: true
			},
			localite : {'required' : function(element)
				{
					var email = $('#contactEmail').val();
					var numLibelle = $('input[id=numLibelle]').val();
        			var codePostal = $('input[id=codePostal]').val();
					if(email.length == 0 ) {
						return true;
					} else {
						return numLibelle.length > 0 || codePostal.length > 0 || appartement.length > 0 || batiment.length > 0 || lieuDit.length > 0;;
					}
				}
			},
			countryCode : {'required' : function(element)
						{
							if($('input[id=contactEmail]').length > 0)
								var email = $('input[id=contactEmail]').val();
							if(email != undefined ) {
								return email.length == 0;
							} else {
								return true;
							}
					}
				},
			lastName : {
			    required:true,
			    nomPrenomFormat: true
			},
			firstName :{
                required:true,
                nomPrenomFormat: true
            },
			titleCode : 'required',
			addressId : { ownerLengthError: '' },
			email :{ email: true }
		},
		messages : {

			codePostal : {
				required : Globalize.localize("Code Postal est nécessaire",
						"fr_FR"),
				number : Globalize.localize(
						"Merci de saisir un code postal valide", "fr_FR"),
//				maxlength : Globalize.localize(
//						"S'il vous plaît ne pas entrer plus de 5 caractères",
//						"fr_FR")
			},
			localite : Globalize.localize("address.localite.required",
					"fr_FR"),
			numLibelle : {
			    required: Globalize.localize("address.numLibelle.required", "fr_FR"),
			    libelleVoieFormat: Globalize.localize("address.numLibelle.format", "fr_FR")
			},
			countryCode : Globalize.localize("address.countryCode.required", "fr_FR"),
			titleCode : Globalize.localize("address.titleCode.required", "fr_FR"),
			firstName : {
                required : Globalize.localize("address.firstName.required", "fr_FR"),
                nomPrenomFormat : Globalize.localize("address.firstName.valid", "fr_FR")
            },
			lastName : {
			    required : Globalize.localize("address.lastName.required", "fr_FR"),
			    nomPrenomFormat : Globalize.localize("address.lastName.valid", "fr_FR")
			},
            "addressId" : {
                ownerLengthError: function () {
                    var mr = document.querySelector( "#civiliteMr" );
                    var mme = document.querySelector( "#civiliteMme" );
                    if( mr.checked ){
                        return Globalize.localize( "address.concatCiviliteMrNomPrenomMaxCharacter", "fr_FR" );
                    } else if( mme.checked || ( !mr.checked && !mme.checked ) ){
                        return Globalize.localize( "address.concatCiviliteMmeNomPrenomMaxCharacter", "fr_FR" );
                    }

                }
            },
            email : Globalize.localize("Email erronee","fr_FR")
		},
        errorPlacement : function(error, element) {
			element.parent().after(error);
			$("ul", container).append(error);
		},
		highlight : function(element) {
			$(element).parent().parent().addClass("error-contener");

		},
		unhighlight : function(element) {
			if ($(element).parent().length && $(element).parent().parent().length) {
				$(element).parent().parent().removeClass("error-contener");
			}
		},
		invalidHandler : function() 
		{   
			document.location.href = "#error-coordonnees-part";
			$('#error-coordonnees-part').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus();
		},
		errorContainer : container

	});
};


F6.VALIDATIONS.formBookCoordonneesDestinataireProfessionnel = function() {
    var formElement = $('#bookCoordonneesProfessionnel');
    var container = $('#error-coordonnees-pro')
    $(container).html('<ul></ul>');
    var contactEmail = $('input[id=contactEmailPro]').val();
    if(contactEmail != undefined && contactEmail.length) {
//   	$('#codePostalPro').removeClass('required');
    }
    $(container).html('<ul></ul>');
    $(container).html('<ul></ul>');
	formElement.validate({
	    errorElement : 'span',
		wrapper : 'li',
		rules : {
        	numLibelle : {
            	'required': function(element)
                {
                    var email = $('input[id=contactEmailPro]').val();
            		var localite = $('input[id=localitePro]').val();
            		var codePostal = $('input[id=codePostalPro]').val();
            		var batiment = $('input[id=batimentPro]').val();
            		var lieuDit = $('input[id=lieuDitPro]').val();
            		if(email.length == 0 ) {
            			return $('input[id=localitePro]').val().toLowerCase().indexOf("cedex") < 0  ;
            		} else {
            			return  (localite.length > 0 && localite.toLowerCase().indexOf("cedex") < 0) || (codePostal.length > 0 && localite.toLowerCase().indexOf("cedex") < 0)
            			|| batiment.length > 0 || lieuDit.length > 0;
            		}
                },
                libelleVoieFormat: true
            },
			formVoie1 : 'required',
            codePostal : {
				'required': function(element)
				{
				    return $("#codePostalPro").hasClass("required");
				}
                //maxlength : 5,
				//number: true
			},
			raisonSociale : 'required',
			localite : {'required' : function(element)
				{
					var email = $('input[id=contactEmailPro]').val();
					var numLibelle = $('input[id=numLibellePro]').val();
        			var codePostal = $('input[id=codePostalPro]').val();
        			var batiment = $('input[id=batimentPro]').val();
        			var lieuDit = $('input[id=lieuDitPro]').val();
					if(email.length == 0 ) {
						return true;;
					} else {
						return numLibelle.length > 0 || codePostal.length > 0 || batiment.length > 0 || lieuDit.length > 0;
					}
				}
			},
			countryCode : {
			    'required' : function(element)
                {
                    var email = $('input[id=contactEmailPro]').val();
                    if(email != undefined ) {
                        return email.length == 0;
                    } else {
                        return true;
                    }
				}
			},
			addressId : {
			    ownerLengthError: 'Pro'
			},
			lastName : {
			    nomPrenomFormat: true
            },
            firstName :{
                nomPrenomFormat: true
            },
            email :{ email: true }
		},
		messages : {
			codePostal : {
				required : Globalize.localize("Code Postal est nécessaire",
						"fr_FR")
//				number : Globalize.localize(
//						"Merci de saisir un code postal valide", "fr_FR"),
//				maxlength : Globalize.localize(
//						"S'il vous plaît ne pas entrer plus de 5 caractères",
//						"fr_FR")
			},
			raisonSociale : Globalize.localize("address.raisonSociale.required",
					"fr_FR"),
			localite : Globalize.localize("address.localite.required",
					"fr_FR"),
			titleCode : Globalize.localize("address.titleCode.required", "fr_FR"),
			numLibelle : {
                required: Globalize.localize("address.numLibelle.required", "fr_FR"),
                libelleVoieFormat: Globalize.localize("address.numLibelle.format", "fr_FR")
            },
			countryCode : Globalize.localize("address.countryCode.required", "fr_FR"), 
			 "addressId" : {
                            ownerLengthError: function () {
                                var mr = document.querySelector( "#civiliteMr" );
                                var mme = document.querySelector( "#civiliteMme" );
                                if( mr.checked ){
                                    return Globalize.localize( "address.concatCiviliteMrNomPrenomMaxCharacter", "fr_FR" );
                                } else if( mme.checked || ( !mr.checked && !mme.checked ) ){
                                    return Globalize.localize( "address.concatCiviliteMmeNomPrenomMaxCharacter", "fr_FR" );
                                }

                            }
                        },
			firstName : Globalize.localize("address.firstName.valid", "fr_FR"),
			lastName : {
			    nomPrenomFormat: Globalize.localize("address.lastName.valid", "fr_FR")
			},
            email : Globalize.localize("Email erronee","fr_FR")
		},
        errorPlacement : function(error, element) {
			element.parent().after(error);
			$("ul", container).append(error);
		},
		highlight : function(element) {
			$(element).parent().parent().addClass("error-contener");

		},
		unhighlight : function(element) {
			if ($(element).parent().length && $(element).parent().parent().length) {
				$(element).parent().parent().removeClass("error-contener");
			}
		},
		invalidHandler : function() 
		{   
			document.location.href = "#error-coordonnees-pro";
			$('#error-coordonnees-pro').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus();
		},
		errorContainer : container

	});
}

F6.VALIDATIONS.historiqueComptePrepaye = function() {
    var formElement = $('#compte-prepaye-search');
    formElement.validate({
        rules: {
            montantmin: {
                'priceValidation2': true
//                'lessThan': 'montantmax',
//                'lessThanMax': true
            },
            montantmax: {
                'priceValidation2': true,
//                'greaterThan': 'montantmax',
                'greaterThanMin': true
            },
            datedebut: {
                'oneAtLeastRequired': ['montantmin', 'montantmax', 'datedebut', 'datefin'],
                'datefr': true
       //         'dateCompare': {'date': 'datefin', 'type': 'earlier'}
            },
            datefin: {
                'datefr': true,
                'dateCompare': {'date': 'datedebut', 'type': 'greater'}
            }
        },
        messages: {
            datedebut: {
                'oneAtLeastRequired': Globalize.localize("Merci de remplir au moins un champ", "fr_FR" ),
                'datefr': Globalize.localize("Veuillez vérifier le format de la date de début", "fr_FR" )
          //      'dateCompare': Globalize.localize("La date de debut doit être antérieure à la date de fin", "fr_FR" )
            },
            datefin: {
                'datefr': Globalize.localize("Veuillez vérifier le format de la date de fin", "fr_FR" ),
                'dateCompare': Globalize.localize("la date de fin ne peut être antérieure à la date de début", "fr_FR" )
            },
            montantmin: {
                'lessThan': Globalize.localize("Le montant maximum ne peut être inférieur au montant minimum", "fr_FR" ),
                'lessThanMax': Globalize.localize("Le montant maximum ne peut être inférieur au montant minimum", "fr_FR" ),
                'priceValidation2': Globalize.localize("Vous n'avez saisi aucun montant", "fr_FR" )
            },
            montantmax: {
            	'greaterThan': Globalize.localize("Le montant minimum ne peut être supérieur au montant maximum", "fr_FR" ),
            	'greaterThanMin': Globalize.localize("Le montant minimum ne peut être supérieur au montant maximum", "fr_FR" ),
                'priceValidation2': Globalize.localize("Vous n'avez saisi aucun montant", "fr_FR" )
                
            }
        }
    });
};

F6.VALIDATIONS.historiqueCompteCommande = function() {
	var formElement = $('#form-lelSearchCommandForm');
    formElement.validate({
        rules: {
            datedebut: {
                'datefr': true
            },
            datefin: {
                'datefr': true,
                'dateCompare': {'date': 'datedebut', 'type': 'greater'}
            }
        },
        messages: {
        	 datedebut: {
                 'datefr': Globalize.localize("Veuillez vérifier le format de la date de début", "fr_FR" )
             },
             datefin: {
                 'datefr': Globalize.localize("Veuillez vérifier le format de la date de fin", "fr_FR" ),
                 'dateCompare': Globalize.localize("la date de fin ne peut être antérieure à la date de début", "fr_FR" )
             }
        }
    });
};

/* Compte_Mes_Adresses_Modifier.php */
F6.VALIDATIONS.modifierAdresse = function() {
	$.validator.addMethod("validName", function(value, element) {
		if (value.length > 38) {
			return false;
		}
		test = /^[A-Za-zÀÁÂÃÄÅÆÇCÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒRŠþÙÚÛÜÝŸŽßàáâãäåæçcèéêëìíîïðñòóôõöœršÞùúûüýÿž][A-Za-zÀÁÂÃÄÅÆÇCÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒRŠþÙÚÛÜÝŸŽßàáâãäåæçcèéêëìíîïðñòóôõöœršÞùúûüýÿž '-]+$/.test(value);
		return test;
	});
	
    var formElement = $('#editAddress');
    formElement.validate({
        rules: {
        	raisonSociale: 'required',
        	codePostal: {
               // minlength: 5
        	},
        	firstName : {
        		required : true,
        		validName : true
        	},
        	lastName : {
        		required : true,
        		validName : true
        	},
        	numLibelle : {

				'required' : function(element) 
                {
	                var val = $('input[id=localite]').val();	
	                
	          		if (val != null) {
	          			if(val.match(/cedex/i)!=null){
	          				return false;
	          			}
	          		}
	          		return true;
	                }
			
        		
        	}
        },
        messages: {
        	raisonSociale: Globalize.localize("editAddress.raisonSociale", "fr_FR" ),
            addressName: Globalize.localize("editAddress.addressName", "fr_FR" ),
            titleCode: Globalize.localize("editAddress.titleCode", "fr_FR" ),
            lastName : {
            	required : Globalize.localize("editAddress.lastName.required", "fr_FR" ),
            	validName : Globalize.localize("editAddress.lastName.valid", "fr_FR" )
            },
            firstName : {
            	required : Globalize.localize("editAddress.firstName.required", "fr_FR" ),
            	validName : Globalize.localize("editAddress.firstName.valid", "fr_FR" )
            },
            numLibelle : Globalize.localize("editAddress.numLibelle", "fr_FR" ),
            /*codePostal: {
                required: Globalize.localize("editAddress.codePostal", "fr_FR" ),
                number: Globalize.localize("editAddress.codePostal.number", "fr_FR" ),
                maxlength: Globalize.localize("editAddress.codePostal.maxlength", "fr_FR" )
            },*/
            localite : Globalize.localize("editAddress.localite", "fr_FR" ),
            countryCode : Globalize.localize("editAddress.countryCode", "fr_FR" ),
            additionalInformation : Globalize.localize("editAddress.additionalInformation", "fr_FR" )
        }
    });
};

/* Compte_Mes_Adresses_Modifier.php */
F6.VALIDATIONS.modifierAdressePRO = function() {
	$.validator.addMethod("validName", function(value, element) {
		if (value.length > 38) {
			return false;
		}
		test = /^[A-Za-zÀÁÂÃÄÅÆÇCÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒRŠþÙÚÛÜÝŸŽßàáâãäåæçcèéêëìíîïðñòóôõöœršÞùúûüýÿž][A-Za-zÀÁÂÃÄÅÆÇCÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒRŠþÙÚÛÜÝŸŽßàáâãäåæçcèéêëìíîïðñòóôõöœršÞùúûüýÿž '-]+$/.test(value);
		return test;
	});
	
    var formElement = $('#editAddressPRO');
    formElement.validate({
        rules: {
        	raisonSociale: 'required',
        	codePostal: {
               // minlength: 5
        	},
        	titleCode : {
        		required : false
        	},
        	firstName : {
        		required : true,
        		validName : true
        	},
        	lastName : {
        		required : true,
        		validName : true
        	}
        },
        messages: {
        	raisonSociale: Globalize.localize("editAddress.raisonSociale", "fr_FR" ),
            addressName: Globalize.localize("editAddress.addressName", "fr_FR" ),
            lastName : {
            	required : Globalize.localize("editAddress.lastName.required", "fr_FR" ),
            	validName : Globalize.localize("editAddress.lastName.valid", "fr_FR" )
            },
            firstName : {
            	required : Globalize.localize("editAddress.firstName.required", "fr_FR" ),
            	validName : Globalize.localize("editAddress.firstName.valid", "fr_FR" )
            },
            numLibelle : Globalize.localize("editAddress.numLibelle", "fr_FR" ),
            codePostal: {
  //              required: Globalize.localize("editAddress.codePostal", "fr_FR" ),
                number: Globalize.localize("editAddress.codePostal.number", "fr_FR" ),
                maxlength: Globalize.localize("editAddress.codePostal.maxlength", "fr_FR" )
            },
            localite : Globalize.localize("editAddress.localite", "fr_FR" ),
            countryCode : Globalize.localize("editAddress.countryCode", "fr_FR" )
        }
    });
};


/* Compte_Mes_Adresses_Modifier.php */
F6.VALIDATIONS.validerDeclaration = function() {

	var submitMultiClick = false;
    var formElement = $('#declarationHonneur');
    formElement.validate({
        rules: {
        	nomDeclarant: {
        		required:true,
                maxlength: 38
        	},
            aTort : 'required',
            personneDecedee : 'required',
            enfantMineur : 'required',
            majeurTutelle : 'required',
            parentsDivorces : 'required',
            demenagementEntreprise : 'required',
            autorisation: 'required',
            conditions: 'required'
        },
        groups : {
        	declarationGroup : "aTort personneDecedee enfantMineur majeurTutelle parentsDivorces demenagementEntreprise autorisation conditions"
        },
        messages: {
        	nomDeclarant: {
        		required: Globalize.localize("declarationHonneur.nomDeclarant.required", "fr_FR" ), 
        		maxlength: Globalize.localize("declarationHonneur.nomDeclarant.maxlength", "fr_FR" )
        	},
        	aTort: Globalize.localize("declarationHonneur.declarationGroup.required", "fr_FR" ),
        	personneDecedee: Globalize.localize("declarationHonneur.declarationGroup.required", "fr_FR" ),
        	enfantMineur: Globalize.localize("declarationHonneur.declarationGroup.required", "fr_FR" ),
        	majeurTutelle: Globalize.localize("declarationHonneur.declarationGroup.required", "fr_FR" ),
        	parentsDivorces: Globalize.localize("declarationHonneur.declarationGroup.required", "fr_FR" ),
        	demenagementEntreprise: Globalize.localize("declarationHonneur.declarationGroup.required", "fr_FR" ),
        	autorisation: Globalize.localize("declarationHonneur.declarationGroup.required", "fr_FR" ),
        	conditions: Globalize.localize("declarationHonneur.declarationGroup.required", "fr_FR" )
        },
        submitHandler: function(form) {
        	if (submitMultiClick == false)
        		form.submit();
        	submitMultiClick = true;

        },
        invalidHandler: function() {
            // re-enable the button here as validation has failed
        	//$('#declarationHonneur input[type=submit]').attr('submitted', false);
        	return false;
        }
        
    });
};

/* Compte_Mes_Adresses_Modifier.php */
F6.VALIDATIONS.validerDeclarationPro = function() {
	$.validator.addMethod('nomDeclarantPro', function(value, element) {
		return ($.trim(value) == "Nom et prénom") ? false : true;
	});
	
    $('#declarationHonneurPro').validate({
        rules: {
        	nomDeclarant: {
        		required : true,
        		nomDeclarantPro : true,
                maxlength: 38
        	},
        	representantLegal : 'required',
            justificatifSouscription : 'required'
        },
        groups : {
        	declarationGroup : "representantLegal justificatifSouscription"
        },
        messages: {
        	nomDeclarant: {
        		required: Globalize.localize("declarationHonneurPro.nomDeclarant.required", "fr_FR" ),
        		nomDeclarantPro: Globalize.localize("declarationHonneurPro.nomDeclarant.required", "fr_FR" ),
        		maxlength: Globalize.localize("declarationHonneurPro.nomDeclarant.maxlength", "fr_FR" )
        	},
        	representantLegal: Globalize.localize("declarationHonneurPro.declarationGroup.required", "fr_FR" ),
        	justificatifSouscription: Globalize.localize("declarationHonneurPro.declarationGroup.required", "fr_FR" )
        },
        submitHandler: function(form) {
        	submitted = $('#declarationHonneurPro input[type=submit]').attr('submitted');
    		
        	if(submitted == undefined || submitted == "false")
        	{
        		$('#declarationHonneurPro input[type=submit]').attr('submitted', true);
        		form.submit();
        	}
        },
        invalidHandler: function() {
            // re-enable the button here as validation has failed
        	$('#declarationHonneurPro input[type=submit]').attr('submitted', false);
        },
        submitHandler: function(form) {
        	submitted = $('#declarationHonneurPro input[type=submit]').attr('submitted');
    		
        	if(submitted == undefined || submitted == "false")
        	{
        		$('#declarationHonneurPro input[type=submit]').attr('submitted', true);
        		form.submit();
        	}
        },
        invalidHandler: function() {
            // re-enable the button here as validation has failed
        	$('#declarationHonneurPro input[type=submit]').attr('submitted', false);
        }
    });
};



// LEL_etape4_01_verification_BAT
F6.VALIDATIONS.verificationBAT = function() {
//    var formElement = $('#validez-courrier');
//    formElement.validate({
//        
//        rules: {
//            confirme: {
//                'required': true
//            }
//        },
//        messages: {
//            confirme: {
//                'required': Globalize.localize("Merci de confirmer la conformité du document.", "fr_FR" )
//            }
//        }
//    })
};


// LEL etape 2
F6.VALIDATIONS.lelEtape2 = function() {
    var formElement = $('#impression-options');
    formElement.validate({
        rules: {
            type_impression: {
                'required': true
            },
            format_impression: {
                'required': true
            },
            place_adresse: {
                'required': true
            },
            name_doc: {
                'required': true
            }
        },
        messages: {
            type_impression: {
                'required': 'Merci de choisir le type d\'impression'
            },
            format_impression: {
                'required': 'Merci de choisir le format d\'impression'
            },
            place_adresse: {
                'required': 'Merci de choisir l\'adresse du destinataire'
            },
            name_doc: {
                'required': 'Merci de renseigner le nom du document'
            }
        }
    });
};


// LREL - etape 3_form saise email
F6.VALIDATIONS.saiseEmail = function() {
    var formElement = $('#lrel-saise-email');
    var container = $('#errorBoxTop-saise-email')
    $(container).html('<ul></ul>');
    
    formElement.validate({
        rules: {
            formAdressEmail: 'required email',
            formRaisonSociale1: {
                'required':true
            }
        },
        messages: {
            formAdressEmail: {
                'required': Globalize.localize("Confirmation email est nécessaire", "fr_FR" ),
                'email': Globalize.localize("Entrer une adresse email valide.", "fr_FR" )
            },
            formRaisonSociale1: {
                'required':'Raison sociale est nécessaire'
            }
        },
        
        errorContainer: container
        
    });
};



// LREL - etape 3_form recherche Email
F6.VALIDATIONS.rechercheEmail = function() {
    var formElement = $('#lrel-recherche-email');
    var container = $('#errorBoxTop-recherche-email')
    $(container).html('<ul></ul>');
    
    formElement.validate({
        rules: {
            formRaisonSociale2: {
                'required': true
            },
            formVoie: {
                'required': true
            },
            formCP: {
                'required': true,
                'maxlength': 5,
                'number': true
            },
            formLocalite: 'required',
            formPays: 'required'
        },
        messages: {
            formRaisonSociale2: {
                'required': Globalize.localize("Raison sociale est nécessaire", "fr_FR" )
            },
            formVoie: {
                'required': Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" )
            },
            formCP: {
                number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            formLocalite: Globalize.localize("Localité est nécessaire", "fr_FR" ),
            formPays: Globalize.localize("Pays est nécessaire", "fr_FR" )
        },
        errorContainer: container
        
    });
}




// LREL - etape 4
F6.VALIDATIONS.lrelAdressRecommande = function() {
    var formElement = $('#lrel-adress-recommande');
    formElement.validate({
        rules: {
            civilite: {
                'required': true
            },
            formNom: {
                'required': true
            },
            formPrenom: {
                'required': true
            },
            formVoie: {
                'required': true
            },
            formLocalite: {
                'required': true
            },
            formCodeP: {
                'required': true,
                'maxlength': 5,
                'number': true
            },
            formPays: {
                'required': true
            }
        },
        messages: {
            civilite: {
                'required': Globalize.localize("Civilité est nécessaire", "fr_FR" )
            },
            formNom: {
                'required': Globalize.localize("Nom est nécessaire", "fr_FR" )
            },
            formPrenom: {
                'required': Globalize.localize("Prénom est nécessaire", "fr_FR" )
            },
            formVoie: {
                'required': Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" )
            },
            formLocalite: {
                'required': Globalize.localize("Localité est nécessaire", "fr_FR" )
            },
            formCodeP: {
              //  required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            formPays: {
                'required': Globalize.localize("Pays est nécessaire", "fr_FR" )
            }
        }
    });
}


// LEL etape 2
F6.VALIDATIONS.lrelEtape2 = function() {
    var formElement = $('#impression-options-lrel');
    formElement.validate({
        rules: {
            type_impression: {
                'required': true
            },
            format_impression: {
                'required': true
            },
            place_adresse: {
                'required': true
            }
        },
        messages: {
            type_impression: {
                'required': Globalize.localize("Merci de choisir le type d'impression", "fr_FR" )
            },
            format_impression: {
                'required': Globalize.localize("Merci de choisir le format d'impression", "fr_FR" )
            },
            place_adresse: {
                'required': Globalize.localize("Merci de choisir l'adresse du destinataire", "fr_FR" )
            }
        }
    });
};

// LEL etape 4
F6.VALIDATIONS.lrelEtape4 = function() {
    var formElement = $('#lrel_etape4_ajouter_adresse');
    var container = $('#errorBoxTop2')
    $(container).html('<ul></ul>');

    formElement.validate({
        rules: {
            lrel_etape4_ajouter_adresse_code_postal: { minlength: 5 }
        },
        messages: {
            formNameAddress: { required: Globalize.localize("Nom de l'adresse est nécessaire", "fr_FR" ) },
            lrel_etape4_ajouter_adresse_civilite: { required: Globalize.localize("Civilité est nécessaire", "fr_FR" ) },
            lrel_etape4_ajouter_adresse_nom: { required: Globalize.localize("Nom est nécessaire", "fr_FR" ) },
            lrel_etape4_ajouter_adresse_prenom: { required: Globalize.localize("Prénom est nécessaire", "fr_FR" ) },
            lrel_etape4_ajouter_adresse_code_postal: {
               // required: Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
                number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
                maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
            },
            lrel_etape4_ajouter_adresse_voie: { required: Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" ) },
            lrel_etape4_ajouter_adresse_localite: { required: Globalize.localize("Localité est nécessaire", "fr_FR" ) },
            lrel_etape4_ajouter_adresse_pays: { required: Globalize.localize("Pays est nécessaire", "fr_FR" ) }
        },
        errorContainer: container
    });
};

// Compte_Parametrage_e-service_MNA_envoS.php
F6.VALIDATIONS.mnaEnvoiSMS = function(){
    var formElement = $('#mna_send_sms_card');
    formElement.validate({
        rules: {
            mna_send_smscard_destinataire: { minlength: 10 },
            mna_send_smscard_destinataire_2: { minlength: 10 },
            mna_send_smscard_destinataire_3: { minlength: 10 },
            mna_send_smscard_destinataire_4: { minlength: 10 },
            mna_send_smscard_destinataire_5: { minlength: 10 },
            mna_send_smscard_destinataire_6: { minlength: 10 },
            mna_send_smscard_destinataire_7: { minlength: 10 },
            mna_send_smscard_destinataire_8: { minlength: 10 },
            mna_send_smscard_destinataire_9: { minlength: 10 },
            mna_send_smscard_destinataire_10: { minlength: 10 }
        },      
        messages: {
            mna_send_smscard_destinataire: { required: Globalize.localize("Téléphone est nécessaire", "fr_FR" ) }
        }
    });
};

F6.VALIDATIONS.mnaCalculVolumeDemenager = function(){
    var formElement = $('#mna_calcul_volume_demenager');
    formElement.validate();
};


F6.VALIDATIONS.mnaEnvoiCartesPostales = function(){
    var formElement = $('#mna_envoi_cartes_postales');
    var d = new Date(),
                today_date = ("0" + d.getDate()).slice(-2) + "/" + ("0" + (d.getMonth() + 1)).slice(-2) + "/" + d.getFullYear();
    formElement.validate({
        rules: {
            mna_send_postalcard_date: {
                'datefr': true,
                'dateCompare': {'date': today_date, 'type': 'earlier'}
            }
        },
        messages: {
            mna_send_postalcard_message: { required: Globalize.localize("Message est nécessaire", "fr_FR" ) },
            mna_send_postalcard_cp: { //required: Globalize.localize("Code Postal est nécessaire", "fr_FR" )
            	
            },
            mna_send_postalcard_localite : { required: Globalize.localize("Localité est nécessaire", "fr_FR" ) },
            mna_send_postalcard_voie : { required: Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" ) },
            mna_send_postalcard_destinataire : { required: Globalize.localize("Destinataire est nécessaire", "fr_FR" ) },
            mna_send_postalcard_date: {
                required: Globalize.localize("Une date est necessaire", "fr_FR" ),
                'datefr': Globalize.localize("Veuillez vérifier le format de la date de début", "fr_FR" ),
                'dateCompare' : Globalize.localize("La date choisie doit être supérieure à la date du jour", "fr_FR" )
            }
        }
    });
};
F6.VALIDATIONS.searchSuiviByFile = function(){
    var formElement = $('#form_search_suivi_by_file');
    
    formElement.validate({
        rules: {
            form_search_suivi_by_file_telechargez: {
                required: true
            },
            form_search_suivi_by_file_composition_num_col: {
                required: true
            },
            form_search_suivi_by_file_affichage_num_col: {
                required: function(element) {
                    return $("#search_suivi_by_file_fichier:checked").length ? true : false
                }
            },
            form_search_suivi_by_file_affichage_num_col_suivi: {
                required: function(element) {
                    return $("#search_suivi_by_file_fichier:checked").length ? true : false
                }
            }
        },
        messages: {
            form_search_suivi_by_file_telechargez: {
                required: Globalize.localize("Un fichier est nécessaire", "fr_FR" )
            },
            form_search_suivi_by_file_composition_num_col: {
                required: Globalize.localize("Indiquez la colonne contenant le(s) numéro(s) de suivi(s)", "fr_FR" )
            },
            form_search_suivi_by_file_affichage: {
                required: Globalize.localize("Option d'affichage est nécessaire", "fr_FR" )
            },
            form_search_suivi_by_file_affichage_num_col: {
                required: Globalize.localize("Indiquez à partir de quelle colonne renseigner les informations de suivi", "fr_FR" )
            },
            form_search_suivi_by_file_affichage_num_col_suivi: {
                required: Globalize.localize("Indiquez la méthode d'affichage", "fr_FR" )
            }
        }
    });
};

F6.VALIDATIONS.searchSuiviByCodeGenerateur = function(){
    var formElement = $('#form_search_suivi_by_code_generateur');
    
    formElement.validate({
        messages: {
            form_search_code_structure: { required: Globalize.localize("Code structure est obligatoire", "fr_FR") },
            form_search_numero_code_generateur: { required: Globalize.localize("Numéro code générateur est obligatoire", "fr_FR") },
            form_search_periode_de: { required: Globalize.localize("La période est obligatoire", "fr_FR") },
            form_search_a_partir_de: { required: Globalize.localize("La date de début de période est obligatoire", "fr_FR") }
        }
    });
};

F6.VALIDATIONS.panierCodePromo = function(){
    var formElement = $('#formOrderRecap');
    var container = $('#errorBoxTop');
    formElement.validate({
        errorContainer: container,
        rules: {
        	voucherCode: { required: true }
        },
        messages: {
        	voucherCode: { required: Globalize.localize("Vous n'avez saisi aucun code. Veuillez saisir un code de réduction et le valider.", "fr_FR") }
        },
        invalidHandler: function(form, validator) {
            var errors = validator.numberOfInvalids();
            
            F6.VALIDATIONS.highlightError($(validator['containers']).attr('id'));
            
        },
        submitHandler: function(form) {
            F6.AJAX.tunnelAchatPanierCodePromo(form);
        }

    });
};


F6.VALIDATIONS.codeGenerateurPopup = function(){
    var formElement = $('#codeGenerateurPopup');
    
    formElement.validate({
        onkeyup: false,
        onfocusout: false,
        rules: {
            form_email: 'required email',
            form_email_confirm: {
                required: true,
                equalTo: "#email"
            }
        },
        messages: {
            form_email: {
                required: Globalize.localize("Email est nécessaire", "fr_FR" )
            },
            form_email_confirm: {
                required: Globalize.localize("Confirmation email est nécessaire", "fr_FR" ),
                equalTo: Globalize.localize("Les adresse e-mails doivent être identiques", "fr_FR" )
            }
        }
    });


};


F6.VALIDATIONS.activationCodeValidation = function(){
    var formElement = $('#form-PmnaReelContractForm');
    
    formElement.validate({        
        rules: {
        	activationCode: { required: true }
        },
        messages: {
        	activationCode: {
                required: function() {
                	$('.errorMessageReex').html("");
                	return "Le code d'activation est obligatoire.";
                }
            }
        }
    });
};

//F6.VALIDATIONS.panierModePaiement = function(){
//	var formElement = $('#formModePaiement');
//    var container = $('#errorPaymentMode');
//    container.html("<ul></ul>");
//    formElement.validate({
//        errorContainer: container,
//        rules: {
//            modePaiement: { required: true }
//        },
//        messages: {
//            modePaiement: { required: Globalize.localize("Veuillez sélectionner un moyen de paiement.", "fr_FR") }
//        }
//		
//		
//    });
//	
//	$(".transverse .step3 .block-border-corner ul").css("margin-top","20px");
//  
//};

F6.VALIDATIONS.enregistrerBrouillon = function() {
	var container = $('#trackErrorDraft').html('<ul></ul>');
	 $('#draftForm').validate({
   		errorContainer: container, 
        rules: {
            draft_name: { required: true }
        },
        messages: {
            draft_name: { required: Globalize.localize("Veuillez nommer votre brouillon", "fr_FR") }
        },
        submitHandler: function(form) {
            F6.AJAX.creerBrouillon($('#draftForm'));
        }   
    });	
};






// ************************************** V2
// *****************************************************

// ******************************************Start of bloc done By NOUAOUI
F6.VALIDATIONS.controlInputStep1 = function() {
	var formElement = $('#formStampStep1');
	var container = $('#errorBoxTop')
	$(container).html('<ul></ul>');
	
	formElement.validate({
		rules : {
			thumbStamp : 'required',
			sendType : 'required',
			fromPlace : 'required',
			destination : 'required',
            stickerDouane: {
                required: function () {
                    return $("#sticker-douane").is(":visible");
                }
            }
//				,
//			productType : 'required',
//			weight : 'required'
		},
		messages : {
			sendType : {
				'required' :"Type d'envoi est nécessaire"
			},
			thumbStamp : {
				'required' :"Visuel est nécessaire"
			},
			productType : {
				'required' : "Veuillez choisir une valeur dans le champ Produit"
			},
			weight : {
				'required' :"Veuillez choisir une valeur dans le champ Poids"
			},
			destination : {
				'required' : "Veuillez choisir une destination"
			},
			fromPlace : {
				'required' : "Veuillez choisir un lieu de départ"
			}
		}
		,
		invalidHandler : function() 
		{  
			document.location.href = "#errorBoxTop";
			$('#errorBoxTop').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus();
            $("#error-coordonnees").addClass('mtel-erreur');
			$("#sticker-douane").addClass('error-mtl');


		},

        errorPlacement: function(error, element){}
		,
        /*highlight: function(element) {
            $(element).addClass('error');
            $(element).parent().parent().addClass("error-contener");

        },*/

		errorContainer : container

	});
};

// ZAKARIA********************************************
// LREL - etape 3_form saise email (particulier)
F6.VALIDATIONS.saiseEmailParticulier = function() {
	var formElement = $('#lrel-saise-email-part');
	var container = $('#errorBoxTop-saise-email')
	$(container).html('<ul></ul>');
	
	formElement.validate({
		rules : {
			firstName : 'required',
			lastName : 'required',
			titleCode : 'required',
			email : 'required email'
		},
		messages : {
			firstName : {
				'required' : Globalize.localize(
						"Prénom est nécessaire", "fr_FR")
			},
			lastName : {
				'required' : Globalize.localize(
						"Nom est nécessaire", "fr_FR")
			},
			titleCode : {
				'required' : Globalize.localize(
						"Civilité est nécessaire", "fr_FR")
			},
			email : {
				'required' : Globalize.localize(
						"Adresse email est nécessaire", "fr_FR"),
				'email' : Globalize.localize(
						"Entrer une adresse email valide.", "fr_FR")
			}
		}
		,
		invalidHandler : function() 
		{  
				
			// 1 : is not good for IE8
//			window.setTimeout(function() {
//				 $('html, body').animate({ scrollTop:
//				 $("#errorBoxTop-saise-email").offset().top }, 500);
//				document.location.href = "#errorBoxTop-saise-email";
//				$('#errorBoxTop-saise-email').find('ul li').eq(0).focus();
//			}, 200);
			document.location.href = "#errorBoxTop-saise-email";
			$('#errorBoxTop-saise-email').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus();
			var dest = $(".dest").length > 0;
			var msgGlobal = false;
			var lrtelDestinatiareBloc = $(".lrtelDestinatiare").length > 0;	
			if(lrtelDestinatiareBloc){
					var msg = "Vous devez renseigner une adresse destinataire.";
					$(".dest").addClass("error actived");
					$(".dest.error.actived").html(msg);
					msgGlobal = true;			
			}
			
			if(msgGlobal) {
				$(".infoGlobal").addClass("error errorGlobale actived");
				$(".error.errorGlobale.actived").html("Les informations que vous avez fournies ne vous permettent pas d'accéder à l'étape suivante. Merci de modifier votre saisie à partir des indications de couleur rouge, positionnées près des erreurs correspondantes.");
			}
		}
		,
        submitHandler: function(form) {
        	$(".dest.error.actived").empty();
        	$(".dest.error.actived").removeClass("error actived");
			var exp = $(".exp").length > 0;
			var expediteurExist = $(".myaddress").length > 0;
            
            if (!expediteurExist && exp) {
				var msg = "Vous devez renseigner une adresse expéditeur.";
				$(".exp").addClass("error actived");
				$(".exp.error.actived").html(msg);
				$(".infoGlobal").addClass("error errorGlobale actived");
				$(".error.errorGlobale.actived").html("Les informations que vous avez fournies ne vous permettent pas d'accéder à l'étape suivante. Merci de modifier votre saisie à partir des indications de couleur rouge, positionnées près des erreurs correspondantes.");
			} else {
				$(".exp.error.actived").remove();
				$(".error.errorGlobale.actived").remove();
				form.submit();
			}
        },

		errorContainer : container,
		errorLabelContainer: container,
		wrapper: "li"

	});
};

// LREL - etape 3_form saise email (Pro)

F6.VALIDATIONS.saiseEmailProfessionnel = function() {
	var formElement = $('#lrel-saise-email-pro');
	var container = $('#errorBoxTop-saise-email-pro')
	$(container).html('<ul></ul>');

	formElement.validate({
		rules : {
			email : 'required email',
			raisonSociale : {
				'required' : true
			}
		},
		messages : {
			email : {
				'required' : Globalize.localize(
						"Adresse email est nécessaire", "fr_FR"),
				'email' : Globalize.localize(
						"Entrer une adresse email valide.", "fr_FR")
			},
			raisonSociale : {
				'required' : Globalize.localize(
						'Raison sociale est nécessaire', "fr_FR")
			}
		}
		,
		invalidHandler : function() 
		{   
			document.location.href = "#errorBoxTop-saise-email-pro";
			$('#errorBoxTop-saise-email-pro').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus(); 
			
			var dest = $(".dest").length > 0;
			var msgGlobal = false;
			var lrtelDestinatiareBloc = $(".lrtelDestinatiare").length > 0;	
			if(lrtelDestinatiareBloc){
					var msg = "Vous devez renseigner une adresse destinataire.";
					$(".dest").addClass("error actived");
					$(".dest.error.actived").html(msg);
					msgGlobal = true;			
			}
			
			if(msgGlobal) {
				$(".infoGlobal").addClass("error errorGlobale actived");
				$(".error.errorGlobale.actived").html("Les informations que vous avez fournies ne vous permettent pas d'accéder à l'étape suivante. Merci de modifier votre saisie à partir des indications de couleur rouge, positionnées près des erreurs correspondantes.");
			}
		}
		,
        submitHandler: function(form) {
        	$(".dest.error.actived").empty();
        	$(".dest.error.actived").removeClass("error actived");
			var exp = $(".exp").length > 0;
			var expediteurExist = $(".myaddress").length > 0;
            
            if (!expediteurExist && exp) {
				var msg = "Vous devez renseigner une adresse expéditeur.";
				$(".exp").addClass("error actived");
				$(".exp.error.actived").html(msg);
				$(".infoGlobal").addClass("error errorGlobale actived");
				$(".error.errorGlobale.actived").html("Les informations que vous avez fournies ne vous permettent pas d'accéder à l'étape suivante. Merci de modifier votre saisie à partir des indications de couleur rouge, positionnées près des erreurs correspondantes.");
			} else {
				$(".exp.error.actived").remove();
				$(".error.errorGlobale.actived").remove();
				form.submit();
			}
        },

		errorContainer : container,
		errorLabelContainer: container,
		wrapper: "li"

	});
};

// NOUAOUI ZAKARIA : required condtion for Num et Libelle (CEDEX)
F6.numLibelleRequiredRule = function(element, localiteId) 
{
    if ($('#'+localiteId).val().toLowerCase().indexOf("cedex") >= 0) 
    {
      return false;
    }
    else
   {
    	return true;
   }
}

// LREL - etape 3_form recherche Email particulier
F6.VALIDATIONS.rechercheEmailPrticulier = function() {
	var formElement = $('#lrel-recherche-email-part');
	var container = $('#errorBoxTop-recherche-email-part')
	$(container).html('<ul></ul>');

	formElement.validate({
		rules : {
			firstName : 'required',
			lastName : 'required',
			titleCode : 'required',
			
			raisonSociale : {
				'required' : true
			},
			numLibelle : 
            {
				'required': function(element) 
                {
                  if ($('#localite').val().toLowerCase().indexOf("cedex") >= 0) 
                  {
                    return false;
                  }
                  else
                	  {
                	  return true;
                	  }
                }
            },
			codePostal : {
	//			'required' : true,
//				'maxlength' : 5,
//				'number' : true
			},
			localite : 'required'
		},
		messages : {
			firstName : {
				'required' : Globalize.localize(
						"Prénom est nécessaire", "fr_FR")
			},
			lastName : {
				'required' : Globalize.localize(
						"Nom est nécessaire", "fr_FR")
			},
			titleCode : {
				'required' : Globalize.localize(
						"Civilité est nécessaire", "fr_FR")
			} 
			,
			raisonSociale : {
				'required' : Globalize.localize(
						"Raison sociale est nécessaire", "fr_FR")
			},
			numLibelle : {
				'required' : Globalize.localize(
						"N° et libellé de la voie est nécessaire", "fr_FR")
			},
			codePostal : {
	//			required : Globalize.localize("Code Postal est nécessaire",
		//				"fr_FR"),
//				number : Globalize.localize(
//						"Merci de saisir un code postal valide", "fr_FR"),
//				maxlength : Globalize.localize(
//						"S'il vous plaît ne pas entrer plus de 5 caractères",
//						"fr_FR")
			},
			localite : Globalize.localize("Localité est nécessaire",
					"fr_FR")
		},
		invalidHandler : function() 
		{   
			document.location.href = "#errorBoxTop-recherche-email-part";
			$('#errorBoxTop-recherche-email-part').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus();
		},
		errorContainer : container,
		errorLabelContainer: container,
		wrapper: "li"
		

	});
}
// LREL - etape 3_form recherche Email professionnel
F6.VALIDATIONS.rechercheEmailProfessionnel = function() {
	var formElement = $('#lrel-recherche-email-pro');
	var container = $('#errorBoxTop-recherche-email-pro')
	$(container).html('<ul></ul>');

	formElement.validate({
		rules : { 
			raisonSociale : {
				'required' : true
			},
			numLibelle : 
            {
				'required': function(element) 
                {
                  if ($('#localitePro').val().toLowerCase().indexOf("cedex") >= 0) 
                  {
                    return false;
                  }
                  else
                	  {
                	  return true;
                	  }
                }
            },
			appartement : 'required'
			,
			codePostal : {
	//			'required' : true,
//				'maxlength' : 5,
//				'number' : true
			},
			localite : 'required' 
		},
		messages : {
			 
			appartement : {
				'required' : Globalize.localize(
						"Appartement est nécessaire", "fr_FR")
			}
			,
			raisonSociale : {
				'required' : Globalize.localize(
						"Raison sociale est nécessaire", "fr_FR")
			},
			numLibelle : {
				'required' : Globalize.localize(
						"N° et libellé de la voie est nécessaire", "fr_FR")
			},
			codePostal : {
		//		required : Globalize.localize("Code Postal est nécessaire",
			//			"fr_FR"),
//				number : Globalize.localize(
//						"Merci de saisir un code postal valide", "fr_FR"),
//				maxlength : Globalize.localize(
//						"S'il vous plaît ne pas entrer plus de 5 caractères",
//						"fr_FR")
			},
			localite : Globalize.localize("Localité est nécessaire",
					"fr_FR")
		}
		,
		invalidHandler : function() 
		{  
			document.location.href = "#errorBoxTop-recherche-email-pro";
			$('#errorBoxTop-recherche-email-pro').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus();
		},
		errorContainer : container,
		errorLabelContainer: container,
		wrapper: "li"

	});
} 


// Carnet d'adresse Step 3 LRTEL
F6.VALIDATIONS.addressBookFormOnly = function() 
{
	var formElement = $('#addressBookFormOnly');
	var container = $('#error-destinataires')
	$(container).html('<ul></ul>');

	formElement.validate({
		rules : { 
			cantactId : {
				'required' : true
			} 
		},
		messages : {
			 
			cantactId : {
				'required' : "Veuillez sélectionner au moins un contact"
			}
		}
		,
		invalidHandler : function() 
		{  
			$('#error-destinataires').find('ul li').eq(0).focus();
			$("input:radio:visible:first").focus();
			document.location.href = "#error-destinataires";
		},
		errorContainer : container

	});
} 
// LEL etape 4 (Redifinie lors de l'integration V2 par Nouaoui Zakaria)
F6.VALIDATIONS.lrelEtape4 = function() 
{
	var formElement = $('#lrel_etape4_ajouter_adresse');
	var container = $('#errorBoxTop2');
	$(container).html('<ul></ul>'); 
	
	formElement.validate({
		rules : {
// addressName : {
// 'required' : true
// },
			raisonSociale : {
				'required' : true
			},
			titleCode : {
				'required' : true
			},
			lastName : {
				'required' : true
			},
			firstName : {
				'required' : true
			},
			numLibelle : 
            {
				'required': function(element) 
                {
                  if ($('#localite').val().toLowerCase().indexOf("cedex") >= 0) 
                  {
                    return false;
                  }
                  else
                	  {
                	  return true;
                	  }
                }
            },
			localite : {
				'required' : true
			},
			codePostal : {
	//			'required' : true,
//				'maxlength' : 5,
//				'number' : true
			},
			countryCode : {
				'required' : true
		}
		},
		messages : {
// addressName :{
// required : Globalize.localize("Nom de l'adresse est nécessaire",
// "fr_FR")
// },
			raisonSociale : {
				required : Globalize.localize("Raison sociale est nécessaire", "fr_FR" )
			},
			titleCode : {
				required : Globalize.localize("Civilité est nécessaire",
						"fr_FR")
			},
			 lastName: { required:
			 Globalize.localize("Nom est nécessaire", "fr_FR" ) },
			firstName : {
				required : Globalize.localize("Prénom est nécessaire", "fr_FR")
			},
			codePostal : {
	//			required : Globalize.localize("Code Postal est nécessaire",
		//				"fr_FR"),
//				number : Globalize.localize(
//						"Merci de saisir un code postal valide", "fr_FR"),
//				maxlength : Globalize.localize(
//						"S'il vous plaît ne pas entrer plus de 5 caractères",
//						"fr_FR")
			},
			numLibelle : {
				required : Globalize.localize(
						"N° et libellé de la voie est nécessaire", "fr_FR")
			},
			localite : {
				required : Globalize.localize("Localité est nécessaire",
						"fr_FR")
			},
			countryCode : {
			'required' : Globalize.localize("Pays est nécessaire",
			"fr_FR")
			}
		}//end message
		,
		invalidHandler : function() 
		{   
			document.location.href = "#errorBoxTop2";
			$('#errorBoxTop2').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus();
		},
		errorContainer : container
	});
};


/** AddressForm Part & Pro		  *********************************//**  Mhammed ORCH : morch **/
/** Validation of concatenation of titleCode + firstName + lastName < 36  ******************/
jQuery.validator.addMethod ("ownerLengthError", function(value, element, prefix){
	 var firstNameLength = $('input[id=firstName' + prefix + ']').val().length;
	 var lastNameLength = $('input[id=lastName' + prefix + ']').val().length;
	 
	 var titleCodeLength = 0;
	 if($('input[name=titleCode]').length > 0) {
		 titleCodeLength = $('input[name=titleCode]').val().length;
	 }
	 
	 if( firstNameLength + lastNameLength + titleCodeLength > 36) {
		 erreurNomPrenomCiv=true;
		 return false;
	 }else{
		 erreurNomPrenomCiv=false;
		 $('input[id=lastName]').parent().parent().removeClass("error-contener");
		 $('input[id=firstName]').parent().parent().removeClass("error-contener");
	 }
	 return true;
	}
);
jQuery.validator.addMethod ("ownerLengthErr", function(value, element, prefix){
	var codPostal = $('input[id=codePostal' + prefix + ']').val().length;
	 var localite = $('input[id=localite' + prefix + ']').val().length;
	 
	 if( codPostal + localite> 37) {
		 
		 erreurCodeLocal = true;
		 
		 return false;
	 }else{		 
		 erreurCodeLocal = false;
		 $('input[id=codePostal]').parent().parent().removeClass("error-contener");
		 $('input[id=localite]').parent().parent().removeClass("error-contener");
	 }
	 return true;
}
);

jQuery.validator.addMethod ("alphanumeric", function(value, element) {
	return this.optional(element) || /^[^ ][A-Za-z0-9 ]*[^ ]$/.test(value);
}
);

// BTKTMA-1004 : Méthode pour tester la validité et le format des noms et prénoms
$.validator.addMethod('nomPrenomFormat', function(value, element) {
    if(value.length == 0){
        return true;
    } else {
		regex = new RegExp(/^([çéàëïèA-Za-z]{2}[ 'çéàëïèA-Za-z\*-]*)$/);
		return regex.test($.trim(value));
	}
});

// BTKTMA-1213 : Méthode pour tester le format du lieu-dit et du libellé de la voie
$.validator.addMethod('lieuDitLibelleVoieFormat', function(value, element) {
    if(value.length == 0){
        return true;
    } else {
		regex = new RegExp(/^([çéàëïèA-Za-z0-9.%*/\&@-]{0,4}[ '0-9çéàëïèA-Za-z.%*/\&@-]*)$/);
		return regex.test($.trim(value)); 
	}
});

// BTKTMA-1004 : Méthode pour tester la validité et le format de la voie
$.validator.addMethod('libelleVoieFormat', function(value, element) {
     if(value.length == 0){
            return true;
        } else {
            // check the format only for specific country codes
            var zoneTomComIsoCodes = new Array("fr","mc","gp","mq","gf","re","yt","nc","pf","tf","wf");
            // find the closet form because there might be two forms, the part one and the pro one
           var countryCode = $(element).closest('form').find('[name="countryCode"]').val();
             if($.inArray(countryCode,zoneTomComIsoCodes) > -1 ){
    		 regex = new RegExp(/^([0-9]{0,4}[ 'çéàëïèA-Za-z-]*)$/);
    		 return regex.test($.trim(value));
    		}

    		return true;
    	}
});

// BTKTMA-1004 : Surcharge du validateur email
// BTKTMA-1334 : Correction de la regex pour prendre en compte les chiffres et le - dans le nom de domaine.
$.validator.methods.email = function( value, element ) {
  return this.optional( element ) || /[a-zA-Z0-9-_.]+@[a-zA-Z0-9-]+\.[a-z]+/.test( value );
}


jQuery.validator.addMethod ("emailFormat", function(value, element) {
	if(value != "") { 
		var pattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
		if(!pattern.test(value)) {
			$('#error-coordonnees-part ').css("display","block");
			$("#error-coordonnees-part ul").append('<li id="emailFormatt" style="padding-bottom: 1.2em;"> Le format de l\'email saisi n’est pas conforme. </li>');
			return false;
		} else {
			return true;
		}
	}
	return true;
});

/** AddressForm Part & Pro		  *********************************//**  Mhammed ORCH : morch **/
/** Validation of localite if contain a CEDEX word, otherwise the libelle become required ***/
F6.VALIDATIONS.cedex = function(localiteId) {
	alert(5);
	 return $('input[id=' + localiteId + ']').val().toLowerCase().indexOf("cedex") >= 0; 
};

/** LEL		  *********************************//**  Mhammed ORCH : morch **/
/** Validation of return validation  ******************/
F6.VALIDATIONS.formAddDestinataireFromList = function() {
    var formElement = $('#ajouter-destinataire');
    var container = $('#error-destinataires');
    $(container).html('<ul></ul>');
    
    return formElement.validate({
        messages: {
            contacts: {
                required: Globalize.localize("Merci de sélectionner au moins un destinataire", "fr_FR" )
            }
        },
        submitHandler: function(form) {
            // F6.UI.formCoordonneesDestinataireParticulierAfterValid(form);
        },
		invalidHandler : function() 
		{  
			$('#error-destinataires').find('ul li').eq(0).focus();
			$('.adresses input:eq(0)').focus();
			document.location.href = "#error-destinataires";
		}
    });
};

/** Import file		  *********************************//**  Mhammed ORCH : morch **/
/** Validation of return validation  ******************/
F6.VALIDATIONS.formImport = function() 
{
	var formElement = $('#importDestinataires');
	var container = $('#error-import')
	$(container).html('<span class="error"><ul></ul></span>');
	return formElement.validate({
		rules : { 
			file : {
				required : true,
				accept: "xls|csv"
			} 
		},
		messages : {
			file : {
				required : "Veuillez sélectionner un fichier",
				accept : "Le format du fichier est incorrect"
			}
		},
		invalidHandler : function() 
		{  
			$('#error-import').html('<ul></li>');
			$('#error-import').find('ul li').eq(0).focus();
			$('input[name=file]').focus();
			$('input#import').focus();
			if ( $( "#lbl-fileName" ).length ) {
				$('#lbl-fileName').addClass("inputerror");
			}
//			document.location.href = "#error-import";
		},
		errorContainer : container

	});
	
};
/** REEX Step0		  *********************************//**  Mhammed ORCH : morch **/
/** Validation of return validation  ******************/
F6.VALIDATIONS.reexStep0 = function() 
   {
	 $("#formContenuPack").validate({
    	rules: {
    		dateEffet: {
    			required: true,
    			datefr : true
    		}
    	},
        messages: {
		    		dateEffet: {
		    			required: 'Veuillez saisir la date d\'effet de votre contrat.',
		    			datefr : 'Veuillez saisir une date d’effet au format JJ/MM/AAAA'
		    		}
    	},
    			 errorPlacement: function ($error, $element) {
    			        var name = $element.closest("fieldset").attr('id');
    			        
    			        var errorName = $element.attr('name').replace('.',"");
    			        
    			       	if($("#errorBox" + name + " ul li:last").length > 0){
    			    			if(errorName.indexOf('entitled') >= 0 && $error.text().length !=0){
    			    				$('#element-entitledPerson').html($error.text());
    							}
    			    			else if($('#element-' + errorName).length > 0)
    			            		$('#element-' + errorName).html($error.text());
    							else 
    								$("#errorBox" + name + " ul li:last").after('<li id="element-' + errorName + '">' + $error.text() + '</li>');
    			    	}else {
    			    			$("#errorBox" + name + " ul ").html('<li id="element-' + errorName + '">' + $error.text() + '</li>');
    			        }
    			        
    			    },
    			    
    			    success: function($element) {
    			    	$('#element-' + $element.attr('name')).remove();
    			     }	
        });	
       
   
	    
	    
    

};
/** REEX Step1		  *********************************//**  Mhammed ORCH : morch **/
/** Validation of return validation  ******************/
F6.VALIDATIONS.reexStep1 = function() 
   {
     //BTKBACKLOG-13114 Limitation au caractères numériques sur le champs maidenName
     $('#maidenName').blur(function(){
        var regex = new RegExp(/^([çéàëïèA-Za-z]{2}[ 'çéàëïèA-Za-z\*-]*)$/);
        if($(this).val() != '' && !regex.test($(this).val())){
            $('#element-persons-maidenName').html('<font color="#F7972A">Les caractères numériques ne sont pas acceptés.</font>');//send error msg
            //$('input[id=maidenName]').parent().parent().addClass("error-contener");//light in pink input field
            $('label[for=maidenName]').css("color","#F7972A");//change the color of maidenName label
        }
        else{
            $('#element-persons-maidenName').empty();
            $('label[for=maidenName]').css("color","#565a5c");
        }
      });

   $('#abonneMaidenName').blur(function(){
      var regex = new RegExp(/^([çéàëïèA-Za-z]{2}[ 'çéàëïèA-Za-z\*-]*)$/);
      if($(this).val() != '' && !regex.test($(this).val())){
          $('#errorBoxPersons') .html('<font color="#F7972A">Les caractères numériques ne sont pas acceptés.</font>');//send error msg
          $('label[for=abonneMaidenName]').css("color","#F7972A");//change the color of maidenName label
      }
      else{
          $('#element-persons-abonneMaidenName').empty();
          $('label[for=abonneMaidenName]').css("color","#565a5c");
      }
    });

    var lastFieldSetId;
    var listPersons = new Array();   
    $("#formReexStep1").validate({
    	rules: {
    		dateEffet: {
    			required: function(element) {
                  	 type =  $("#typeContrat").val();
                  	 abm = $('input[id=contractType]').val()=='AM';
                  	 return (type != "PD" && !abm) ? true : false ;
                   },
    			datefr :function(element) {
    				type =  $("#typeContrat").val();
                  	 abm = $('input[id=contractType]').val()=='AM';
                  	 return (type != "PD" && !abm) ? true : false ;
                   }
    		},
			dateFin: {
				required: function(element) {
                  	 type =  $("#typeContrat").val();
                  	 abm = $('input[id=contractType]').val()=='AM';
                  	 return (type != "PD" && !abm) ? true : false ;
                   },
				datefr : function(element) {
                  	 type =  $("#typeContrat").val();
                  	 abm = $('input[id=contractType]').val()=='AM';
                   	 return (type != "PD" && !abm) ? true : false ;
                   }
			},
			
			duree : {
				required: function(element) {
                 	 type =  $("#typeContrat").val();
                  	 abm = $('input[id=contractType]').val()=='AM';
                  	 return (type != "AM" && !abm) ? true : false ;
                  }
			},
			
    		entitledPersonFirstName : {
                required: function(element) {
                	return $('input[name*=onePerson]').prop('checked');
                }
    		},
            entitledPersonLastName : {
                required: function(element) {
                	return $('input[name*=onePerson]').prop('checked');
                }
    		},
    		"currentAddress.numLibelle" : {
        		'required': function(element) 
                {
                  return $('input[id=localite]').val().toLowerCase().indexOf("cedex") < 0;
                }
    		},
    		"newAddress.numLibelle" : {
        		'required': function(element) 
                {
                  return $('input[id=localiteNew]').val().toLowerCase().indexOf("cedex") < 0;
                }
    		},
    		"souscripteur.firstName" : {
        		'required': function(element) 
                {
                  return $('input[id=contractType]').val()=='AM';
                }
    		},
    		"souscripteur.lastName" : {
        		'required': function(element) 
                {
        			 return $('input[id=contractType]').val()=='AM';
                }
    		},
    		
    		"souscripteur.titleCode" : {
        		'required': function(element) 
                {
        			 return $('input[id=contractType]').val()=='AM';
                }
    		},
    		
    		"currentAddress.codePostal" :  {
    		'required': function(element) 
            {
    			 return true;
            }
    		},
    		
    		"newAddress.codePostal" :  {
    		'required': function(element) 
            {
    			 return true;
            }
		}
    		
//    		"persons[0].titleCode" : {
//        		'required': function(element) {
//		    		  $('input[name*=person]').each(function (index) {
//		    			  if($('input[name*="persons\\[' + index + '\\]\\.titleCode]').val() == '') return true;
//		    			  if($('input[name*="persons\\[' + index + '\\]\\.firstName]').val() == '') return true;
//		    			  if($('input[name*="persons\\[' + index + '\\]\\.lastName]').val() == '') return true;
//		    		  });
//        		}
//    		},
    	},
        messages: {
	    		dateEffet: {
	    			required: 'Veuillez saisir la date d\'effet de votre contrat.',
	    			datefr : 'Veuillez saisir une date d’effet au format JJ/MM/AAAA'
	    		},
				dateFin: {
					required: 'Veuillez saisir la date de fin de votre contrat.',
					datefr : 'Veuillez saisir une date de fin au format JJ/MM/AAAA'
				},
        		duree: 'Veuillez choisir une durée de votre contrat.',
        		
        		entitledPersonFirstName : {
        			required:'Si le changement d’adresse concerne une personne décédée, veuillez saisir les coordonnées de l’ayant droit (prénom et nom)',
        			name : ''
        		},
        		entitledPersonLastName : {
        			required: 'Si le changement d’adresse concerne une personne décédée, veuillez saisir les coordonnées de l’ayant droit (prénom et nom)',
        			name : ''
        		},
        		"souscripteur.firstName" :  'Veuillez saisir le prénom et le nom de chaque personne concernée par le contrat.',
        		"souscripteur.lastName" :  'Veuillez saisir le prénom et le nom de chaque personne concernée par le contrat.',
        		"souscripteur.titleCode" : 'Veuillez sélectionner une Civilité.',
        		"company.companyName" :  'Veuillez saisir la raison sociale de la société concernée par le contrat.',
        			
        		"company.companyName" :  'Veuillez saisir la raison sociale de la société concernée par le contrat.',
        		
        		
    			"currentAddress.numLibelle" : 'Veuillez saisir au moins une ligne de votre ancienne adresse dans le champ "N° et libellé de la voie".',
    			"currentAddress.localite" : 'Veuillez saisir le champ "Localité" de votre ancienne adresse.',
    			"currentAddress.codePostal" :  {
                   required: 'Veuillez saisir le champ "Code postal" de votre ancienne adresse.'
//                    number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
//                    maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
    			},
    			
    			
    			"newAddress.numLibelle" : 'Veuillez saisir au moins une ligne de votre nouvelle adresse dans les champs "Bâtiment, Immeuble", "N° et libellé de la voie" ou "Lieu-dit ou BP".',
    			"newAddress.localite" : 'Veuillez saisir le champ "Localité" de votre nouvelle adresse.',
    			"newAddress.countryCode" : 'Veuillez saisir le champ "Localité" de votre nouvelle adresse."',
    			"newAddress.codePostal" :  {
                    required: 'Veuillez saisir le champ "Code postal" de votre nouvelle adresse.',
//                    number: Globalize.localize("Merci de saisir un code postal valide", "fr_FR" ),
//                    maxlength: Globalize.localize("S'il vous plaît ne pas entrer plus de 5 caractères", "fr_FR" )
    			},
    			
    			"internationalAddress.localite" : 'Ligne adresse 3 est obligatoire',
    			"internationalAddress.countryCode" : 'Veuillez sélectionner un pays',
    			"internationalAddress.numLibelle" : 'Ligne adresse 2 est obligatoire',
    			"internationalAddress.codePostal" : 'Ligne adresse 5 est obligatoire',
    			
    			activationCode : 'Veuillez cocher la case ' + $("label[for='activationCode']").text() + ' '
//    			agreement : "L'accord est obligatoire",
        },
        errorPlacement: function ($error, $element) {
            var name = $element.closest("fieldset").attr('id');

            var errorMessage = "Les informations que vous avez fournies ne vous permettent pas d’accéder à l’étape suivante.<br\>" +
            "Merci de modifier votre saisie à partir des indications de couleur rouge, positionnées près des erreurs correspondantes.";

            if($error.text() != ''){
            	$('.errorMessage').html(errorMessage);
            }

            var errorName = $element.attr('name').replace('.',"");

            if(errorName.indexOf('persons') >= 0){
            	if(errorName.indexOf('titleCode') >= 0){
            		if($error.text() != ''){
            			listPersons.push(errorName);
                        $('#element-persons-titleCode').html('Veuillez sélectionner une Civilité.');
            		} else {
            			var len = listPersons.length;
            			for(iCompt=0; iCompt<len; iCompt++){
            				if(listPersons.indexOf(errorName) !==-1){
            					listPersons.splice(listPersons.indexOf(errorName),1);
            				}
            			}
            		}
            		if(listPersons.length === 0){
            			 $('#element-persons-titleCode').empty();
            		}
            	}
            	if(errorName.indexOf('firstName') >= 0 || errorName.indexOf('lastName') >= 0){
	        		if($error.text() != ''){
	                    $('#element-persons').html('Veuillez saisir le prénom et le nom de chaque personne concernée par le contrat.');
	        		} 
            	}
            	if(errorName.indexOf('maidenName') >= 0){
                    regex = new RegExp(/^[a-zA-Z]*$/g);
                    var isAlpha = regex.test($.trim($element.val()));
	        		if(!isAlpha){
	                    $('#element-persons-maidenName').html('Les caractères numériques ne sont pas acceptés.');
	        		} else {
	        			$('#element-persons-maidenName').empty();	
	        		}
            	}
            } else {
	    		if($("#errorBox" + name + " ul li:last").length > 0){
	    			if(errorName.indexOf('entitled') >= 0 && $error.text().length !=0){
	    				$('#element-entitledPerson').html($error.text());
					}
	    			else if($('#element-' + errorName).length > 0)
	            		$('#element-' + errorName).html($error.text());
					else 
						$("#errorBox" + name + " ul li:last").after('<li id="element-' + errorName + '">' + $error.text() + '</li>');
	    		}else {
	    			$("#errorBox" + name + " ul ").html('<li id="element-' + errorName + '">' + $error.text() + '</li>');
            	}
            }
        },
        success: function($element) {
        	$('#element-' + $element.attr('name')).remove();
           }
      });
};


F6.VALIDATIONS.ajoutPersonConcerne = function() 
{
	var listPersons = new Array(); 
	$("#form-PmnaReelContractForm").validate({		     	
        
        errorPlacement: function ($error, $element) {
            var name = $element.closest("fieldset").attr('id');
          
            var errorName = $element.attr('name').replace('.',"");
            
            if(errorName.indexOf('persons') >= 0){
            	if(errorName.indexOf('titleCode') >= 0){
            		if($error.text() != ''){
            			listPersons.push(errorName);
                        $('#element-persons-titleCode').html('Veuillez sélectionner une Civilité.');
            		} else {
            			var len = listPersons.length;
            			for(iCompt=0; iCompt<len; iCompt++){
            				if(listPersons.indexOf(errorName) !==-1){
            					listPersons.splice(listPersons.indexOf(errorName),1);
            				}
            			}
            		}
            		if(listPersons.length === 0){
            			 $('#element-persons-titleCode').empty();
            		}
            	}
            	if(errorName.indexOf('firstName') >= 0 || errorName.indexOf('lastName') >= 0){
   	        		if($error.text() != ''){
   	                    $('#element-persons').html('Veuillez saisir le prénom et le nom de chaque personne concernée par le contrat.');
   	        		} 
            	}
            } else {
   	    		if($("#errorBox" + name + " ul li:last").length > 0){
   	    			if(errorName.indexOf('entitled') >= 0 && $error.text().length !=0){
   	    				$('#element-entitledPerson').html($error.text());
   					}
   	    			else if($('#element-' + errorName).length > 0)
   	            		$('#element-' + errorName).html($error.text());
   					else 
   						$("#errorBox" + name + " ul li:last").after('<li id="element-' + errorName + '">' + $error.text() + '</li>');
   	    		}else {
   	    			$("#errorBox" + name + " ul ").html('<li id="element-' + errorName + '">' + $error.text() + '</li>');
            	}
            }
        },
        success: function($element) {
        	$('#element-' + $element.attr('name')).remove();
           }
      });

};

//bla

F6.VALIDATIONS.validateNewPasswordForm = function() {


        var cote;
        if(EBK.config.isPro == 'false'){

        cote = Globalize.localize("newPasswordForm.pwd.invalidPart", "fr_FR" );

        } else {

         cote = Globalize.localize("newPasswordForm.pwd.invalid", "fr_FR" );

}
	
	$.validator.addMethod('validatePwd', function(value, element) {
	if(EBK.config.isPro == 'false'){
            var regexRulesCharSpe = /^[a-z0-9!\"#$%&'()*+,\-./:;<=>?@\[\]^_`{|}~\s]{8,128}$/i;
            var rtCharSpe = regexRulesCharSpe.test(value);

            regex = new RegExp("((?=.*\\d)(?=.*[A-Z])(?=.*[a-z]).{8,128})");
            rt = regex.test($.trim(value));

            if (rt && rtCharSpe) {
                return true;
            } else {
                return false;
            }

            } else {

             regex = new RegExp("((?=.*\\d)(?=.*[a-zA-Z]).{8,128})");
             return regex.test($.trim(value));

            }
	});
	
    $('#newPasswordForm').validate({
        rules: {
        	pwd: {
        		required:true,
        		validatePwd: true
        	},
        	checkPwd: {
        		required:true,
        		equalTo : "#pwd"
        	}
        },
        messages: {
        	pwd: {
        		required: Globalize.localize("newPasswordForm.pwd.required", "fr_FR" ), 
        		validatePwd: cote
        	},
        	checkPwd: {
        		required: Globalize.localize("newPasswordForm.checkPwd.required", "fr_FR" ), 
        		equalTo: Globalize.localize("newPasswordForm.checkPwd.notEquals", "fr_FR" )
        	}
        }
    });
};

// LREL - etape 4 (Updated by Nouaoui Zakaria)
F6.VALIDATIONS.lrelAdressRecommande = function() {
// var formElement = $('#lrel-adress-recommande');
// var container = $('#errorBoxTop2');
// formElement.validate({
// rules : {
// titleCode : {
// 'required' : true
// },
// lastName : {
// 'required' : true
// },
// firstName : {
// 'required' : true
// },
// numLibelle : {
// 'required' : true
// },
// localite : {
// 'required' : true
// },
// codePostal : {
// 'required' : true,
// 'maxlength' : 5,
// 'number' : true
// },
// countryCode : {
// 'required' : true
// }
//			
// },
// messages : {
// titleCode : {
// 'required' : Globalize.localize("Civilité est nécessaire",
// "fr_FR")
// },
// lastName : {
// 'required' : Globalize.localize("Nom est nécessaire", "fr_FR")
// },
// firstName : {
// 'required' : Globalize.localize("Prénom est nécessaire",
// "fr_FR")
// },
// numLibelle : {
// 'required' : Globalize.localize(
// "N° et libellé de la voie est nécessaire", "fr_FR")
// },
// localite : {
// 'required' : Globalize.localize("Localité est nécessaire",
// "fr_FR")
// },
// codePostal : {
// required : Globalize.localize("Code Postal est nécessaire",
// "fr_FR"),
// number : Globalize.localize(
// "Merci de saisir un code postal valide", "fr_FR"),
// maxlength : Globalize.localize(
// "S'il vous plaît ne pas entrer plus de 5 caractères",
// "fr_FR")
// },
// countryCode : {
// 'required' : Globalize.localize("Pays est nécessaire",
// "fr_FR")
// }
//		
// },
// errorContainer : container
// });
};
// ******************************************End of bloc done By NOUAOUI
// ZAKARIA********************************************
F6.VALIDATIONS.courrierDataHome = function() {
    var f = $('#courrierDataHome');
    var container = $('#trackErrorHome');
    f.validate({
        errorContainer: container, 
        wrapper: 'span',
        rules: {
        	code:{
        		required: true,
        		maxlength:13,
        		minlength:13
        	},
            suivi_envois_temps_reel: {
                required: true
            }
        },
        errorPlacement: function(error, element) {
            element.parent().after(error);
            $(container).html(error);
        },
        messages: {
            suivi_envois_temps_reel: {
                required: Globalize.localize("Ce champ est obligatoire.", "fr_FR" ),
                minlength: Globalize.localize("Entrez 13 caractères minimum", "fr_FR" ),
                maxlength: Globalize.localize("Entrez 13 caractères maximum", "fr_FR" )
            }
        }
    });
}

/**
 * Form validation "adresse livraison et facturation" 
 **/
F6.VALIDATIONS.formLivraisonFacturation = function(trigger) {
    var container = $('#error-address').html('<ul></ul>');
    $('#editAddress').validate({
        errorContainer: container,   
        rules:{
        	titleCode:{required:true},
            lastName:{required:true},
            firstName:{required:true},
            numLibelle:{required:true},
            codePostal:{required:true},
            localite:{required:true},
            countryCode:{required:true}
        } ,    
        messages: {
        	titleCode: Globalize.localize("Veuiller nommer cette adresse", "fr_FR" ),
            lastName: Globalize.localize("Nom est nécessaire", "fr_FR" ),
            firstName: Globalize.localize("Prénom est nécessaire", "fr_FR" ),
            numLibelle:Globalize.localize("N° et libellé de la voie est nécessaire", "fr_FR" ),
            codePostal:Globalize.localize("Code Postal est nécessaire", "fr_FR" ),
            localite:Globalize.localize("Localité est nécessaire", "fr_FR" ),
            countryCode:Globalize.localize("Pays est nécessaire", "fr_FR" )
        },
        submitHandler: function(form) {
            //F6.AJAX.formLivraisonFacturation(form , trigger);
        }      
    });
};

F6.VALIDATIONS.suiviCommandeGuest = function() {
	var formElement = $('#suiviCommandeGuest');
	var container = $('#errorGuest');
	$.validator.addMethod("validName", function(value, element) {
		if (value.length > 38) {
			return false;
		}
		test = /^[A-Za-zÀÁÂÃÄÅÆÇCÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒRŠþÙÚÛÜÝŸŽßàáâãäåæçcèéêëìíîïðñòóôõöœršÞùúûüýÿž][A-Za-zÀÁÂÃÄÅÆÇCÈÉÊËÌÍÎÏÐÑÒÓÔÕÖŒRŠþÙÚÛÜÝŸŽßàáâãäåæçcèéêëìíîïðñòóôõöœršÞùúûüýÿž '-]+$/.test(value);
		return test;
	});
   $.validator.addMethod ("numerique", function(value, element) {
	   if (value.length !=9) {
			return false;
		}
        return this.optional(element) || /^[^ ][z0-9 ]*[^ ]$/.test(value);
      
    });
	formElement.validate({
		rules : {

			numeroDeCommande: {
				required:true
			},
			email: {
				required:true,
				email:true
			},
			nom: {
				required:true
			}
			
		},
		messages : {
			numeroDeCommande: {
				required: Globalize.localize("suiviCommandeGuest.numCommande.required", "fr_FR" )
				
			},
			email: {
                required: Globalize.localize("suiviCommandeGuest.Email.required", "fr_FR" ),
                email: Globalize.localize("suiviCommandeGuest.Email.format", "fr_FR" )
            },
			nom: {
				required:Globalize.localize("suiviCommandeGuest.Nom.required", "fr_FR")
			}
		
			
		},
		invalidHandler : function() 
		{   
			$('#errorGuest').find('ul li').eq(0).focus();
			$("input:text:visible:first").focus();
		},
		highlight : function(element) {
			$(element).addClass('error');
			$(element).parent().parent().addClass("error-contener");

		},
		unhighlight : function(element) {

			$(element).parent().parent().removeClass("error-contener");
			$(element).removeClass("error");
		},

		errorContainer : container,
		errorLabelContainer: container,
		wrapper: "div"

	});
};

F6.VALIDATIONS.GuestPushForm = function() {
	var formElement = $('#GuestPushForm');
	var container = $('#errorGuest');
	
	$.validator.addMethod('validatePwd', function(value, element) {
		regex = new RegExp("((?=.*\\d)(?=.*[a-zA-Z]).{8,128})");
		return regex.test($.trim(value));
	});
	formElement.validate({
		rules : {

			email: {
				required:true,
				email:true
			},
			password : {
				required : true,
				minlength: 8,
				validatePwd:true
				
			},
			checkPassword : {
				required : true,
				equalTo : "#password"
			},
			acceptConditions :{
				required : true,
			}
			
		},
		messages : {
			email: {
                required: Globalize.localize("suiviCommandeGuest.Email.required", "fr_FR" ),
                email: Globalize.localize("suiviCommandeGuest.Email.format", "fr_FR" )
            },
            password : {
				required : Globalize.localize( "Mot de passe est nécessaire", "fr_FR"),
				minlength : Globalize.localize( "Merci de saisir un mot de passe d'au moins 8 caractères", "fr_FR"),
				validatePwd: Globalize.localize("newPasswordForm.pwd.invalid", "fr_FR" )				
			},
			checkPassword : {
				equalTo : Globalize.localize("Les mots de passe saisis doivent être identiques.","fr_FR"),
				required : Globalize.localize("ConfirmPassRequired", "fr_FR"),
				minlength : Globalize.localize("Merci de saisir un mot de passe d'au moins 8 caractères","fr_FR")
			},
			acceptConditions : {
				required : Globalize.localize("Connaissance des conditions générales est nécessaire","fr_FR")
		
			}
		
			
		},
		submitHandler: function(form) {
			if (typeof (tc_events_1) === 'function') {
				tc_events_1(this, "CLICK", {
					'event': 'F',
					'name': 'inscription_confirmation--inscription_exguest',
					'chapter1': 'authentification-inscription',
					'chapter2': 'mode_guest',
					'chapter3': 'page_details_commandes',
					'level2': '113'
				});
			}
			form.submit();
		},

		highlight : function(element) {
			$(element).addClass('error');
			$(element).parent().parent().addClass("error-contener");

		},
		unhighlight : function(element) {

			$(element).parent().parent().removeClass("error-contener");
			$(element).removeClass("error");
		},

		errorContainer : container,
		errorLabelContainer: container,
		wrapper: ""

	});
};



